<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>操作系统 on 文翼的博客</title>
    <link>http://blog.wenzhixin.net.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 操作系统 on 文翼的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>wenzhixin.net.cn 粤ICP备15117953号</copyright>
    <atom:link href="http://blog.wenzhixin.net.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Debian 安装 nodejs 环境</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/debian_node_install</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/debian_node_install</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. 安装编译包&lt;/strong&gt;&lt;/p&gt;
sudo apt-get install python g++ make checkinstall

&lt;p&gt;&lt;strong&gt;2. 获取最新的 node 源码&lt;/strong&gt;&lt;/p&gt;
mkdir ~/src &amp;&amp; cd ~/src
wget -N http://nodejs.org/dist/node-latest.tar.gz
tar xzvf node-latest.tar.gz &amp;&amp; cd node-v*

&lt;p&gt;&lt;strong&gt;3. 配置编译源码&lt;/strong&gt;&lt;/p&gt;
./configure
sudo checkinstall

&lt;p&gt;注意，运行 checkinstall 需要 sudo，之后选择 3，将 node 的版本号前的 v 去掉，
例如，这里安装的版本为 v0.10.21，改为 0.10.21 即可。&lt;br /&gt;
这里编译会比较久，需要耐心等待，特别是在 pi 下。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 安装（-i）和卸载（-r）&lt;/strong&gt;&lt;/p&gt;
sudo dpkg -i node_*
sudo dpkg -r node

&lt;p&gt;&lt;strong&gt;5. 查看 nodejs 和 npm 的版本&lt;/strong&gt;&lt;/p&gt;
node -v
npm -v
</description>
    </item>
    
    <item>
      <title>Debian 添加自启动服务</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/debian_script_init</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/debian_script_init</guid>
      <description>

&lt;h4 id=&#34;1-新建脚本文件:5a63f747350973a6bdfac6af85b4c2a9&#34;&gt;1. 新建脚本文件&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;在 /etc/init.d 下加入脚本文件&lt;/li&gt;
&lt;/ul&gt;
sudo vi /etc/init.d/aria2c

&lt;ul&gt;
&lt;li&gt;输入内容：&lt;/li&gt;
&lt;/ul&gt;
#!/bin/sh
### BEGIN INIT INFO
# Provides:          Aria2
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop::    $network $local_fs $remote_fs
# Should-Start:      $all
# Should-Stop:       $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Aria2 - Download Manager
# Description:       Aria2 - Download Manager
### END INIT INFO

NAME=aria2c
USER=pi
ARIA2C=/usr/bin/$NAME
PIDFILE=/var/run/$NAME.pid
CONF=/home/$USER/.aria2/aria2.conf
ARGS=&#34;--conf-path=${CONF}&#34;

test -f $ARIA2C || exit 0

. /lib/lsb/init-functions

case &#34;$1&#34; in
start)  log_daemon_msg &#34;Starting aria2c&#34; &#34;aria2c&#34;
        start-stop-daemon -S -q -b -m -p $PIDFILE -c $USER -a $ARIA2C -- $ARGS
        log_end_msg $?
        ;;
stop)   log_daemon_msg &#34;Stopping aria2c&#34; &#34;aria2c&#34;
        start-stop-daemon -K -q -p $PIDFILE
        log_end_msg $?
        ;;
restart|reload|force-reload)
        log_daemon_msg &#34;Restarting aria2c&#34; &#34;aria2c&#34;
        start-stop-daemon -K -R 5 -q -p $PIDFILE
        start-stop-daemon -S -q -b -m -p $PIDFILE -c $USER -a $ARIA2C -- $ARGS
        log_end_msg $?
        ;;
status)
        status_of_proc -p $PIDFILE $ARIA2C aria2c &amp;&amp; exit 0 || exit $?
        ;;
*)      log_action_msg &#34;Usage: /etc/init.d/aria2c {start|stop|restart|reload|force-reload|status}&#34;
        exit 2
        ;;
esac
exit 0

&lt;p&gt;以上脚本 &lt;code&gt;### BEGIN INIT INFO - ### END INIT INFO&lt;/code&gt; 为启动脚本需要定义的 metadata 信息，不定义会报错&lt;/p&gt;

&lt;p&gt;启用脚本使用 start-stop-daemon 命令，参数为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-S, &amp;ndash;start  启动服务&lt;/li&gt;
&lt;li&gt;-K, &amp;ndash;stop  停止服务&lt;/li&gt;
&lt;li&gt;-q, &amp;ndash;quiet  静默启动，不输出日志&lt;/li&gt;
&lt;li&gt;-b, &amp;ndash;background  后台启动&lt;/li&gt;
&lt;li&gt;-m, &amp;ndash;make-pidfile  创建 pid 文件&lt;/li&gt;
&lt;li&gt;-p, &amp;ndash;pidfile  指定 pid 文件&lt;/li&gt;
&lt;li&gt;-c, &amp;ndash;chuid  指定启动用户&lt;/li&gt;
&lt;li&gt;-a, &amp;ndash;startas pathname  进程路径&lt;/li&gt;
&lt;li&gt;-R, &amp;ndash;retry timeout|schedule  重试次数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要将 USER 修改为自己的用户名称&lt;br /&gt;
配置文件位于 /home/$USER/.aria2/aria2.conf&lt;/p&gt;

&lt;p&gt;更多参数含义可以通过 &lt;code&gt;man start-stop-daemon&lt;/code&gt; 进行查看&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修改脚本权限&lt;/li&gt;
&lt;/ul&gt;
sudo chmod +x /etc/init.d/aria2c

&lt;ul&gt;
&lt;li&gt;测试脚本&lt;/li&gt;
&lt;/ul&gt;
sudo /etc/init.d/aria2c start
sudo /etc/init.d/aria2c status
sudo /etc/init.d/aria2c stop
sudo /etc/init.d/aria2c status
sudo /etc/init.d/aria2c restart

&lt;h4 id=&#34;2-使用-insserv-设置自动启动:5a63f747350973a6bdfac6af85b4c2a9&#34;&gt;2. 使用 insserv 设置自动启动&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;添加服务&lt;/li&gt;
&lt;/ul&gt;
sudo insserv /etc/init.d/aria2c #添加服务
sudo insserv -r /etc/init.d/aria2c #删除服务

&lt;ul&gt;
&lt;li&gt;重启测试&lt;/li&gt;
&lt;/ul&gt;
sudo reboot
sudo /etc/init.d/aria2c status
</description>
    </item>
    
    <item>
      <title>Installing Virtualbox On Ubuntu Server 14.04</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/installing_vbox_on_ubuntu_server</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/installing_vbox_on_ubuntu_server</guid>
      <description>

&lt;p&gt;For some reasons, my computer just only installed Ubuntu Server 14.04 system.
But sometimes I need to use Windows system to test our project, so I think if I can install virtualbox on the Ubuntu Server,
and then manage the virtualbox by website.&lt;/p&gt;

&lt;p&gt;How to do that?&lt;/p&gt;

&lt;h3 id=&#34;install-virtualbox:f2d7fafa77e4f10c223d7eeab65bce2b&#34;&gt;Install Virtualbox&lt;/h3&gt;

&lt;p&gt;First we go to the &lt;a href=&#34;http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html&#34;&gt;website&lt;/a&gt;,
and download the latest verion(5.0.2) of Virtualbox:&lt;/p&gt;
wget http://download.virtualbox.org/virtualbox/5.0.2/virtualbox-5.0_5.0.2-102096~Ubuntu~trusty_amd64.deb
wget http://download.virtualbox.org/virtualbox/5.0.2/Oracle_VM_VirtualBox_Extension_Pack-5.0.2-102096.vbox-extpack

&lt;p&gt;Install:&lt;/p&gt;
sudo dpkg -i virtualbox-5.0_5.0.2-102096\~Ubuntu\~trusty_amd64.deb
sudo apt-get install -f # install dependency
sudo VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-5.0.2-102096.vbox-extpack

&lt;h3 id=&#34;add-vbox-user:f2d7fafa77e4f10c223d7eeab65bce2b&#34;&gt;Add vbox user&lt;/h3&gt;

&lt;p&gt;Because we want to use the web service that Virtualbox provide, we need to create a new user and set the password of the user:&lt;/p&gt;
sudo useradd -m -G vboxusers vbox
sudo passwd vbox

&lt;h3 id=&#34;install-web-server:f2d7fafa77e4f10c223d7eeab65bce2b&#34;&gt;Install web server&lt;/h3&gt;

&lt;p&gt;Install apache, PHP and Other components:&lt;/p&gt;
sudo apt-get install apache2 php5 libapache2-mod-php5 php-soap

&lt;h3 id=&#34;install-phpvirtualbox:f2d7fafa77e4f10c223d7eeab65bce2b&#34;&gt;Install phpvirtualbox&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://sourceforge.net/projects/phpvirtualbox/&#34;&gt;Phpvirtualbox&lt;/a&gt; is an open source project that is a web-based front-end to VirtualBox written in PHP.
We use it to manage our Virtualbox, download the latest verion(5.0.2):&lt;/p&gt;
wget http://downloads.sourceforge.net/project/phpvirtualbox/phpvirtualbox-5.0-2.zip -O phpvirtualbox.zip

&lt;p&gt;Unzip the package and move to the root dir:&lt;/p&gt;
unzip phpvirtualbox.zip
sudo mv phpvirtualbox-5.0-2 /var/www/html/vbox

&lt;p&gt;Setup the config file, make &lt;code&gt;$username&lt;/code&gt; and &lt;code&gt;$password&lt;/code&gt; match the user we created earlier:&lt;/p&gt;
sudo mv /var/www/html/vbox/config.php-example /var/www/html/vbox/config.php
sudo vi /var/www/html/vbox/config.php

&lt;h3 id=&#34;config-virtualbox-webservice:f2d7fafa77e4f10c223d7eeab65bce2b&#34;&gt;Config Virtualbox webservice&lt;/h3&gt;

&lt;p&gt;Add &lt;code&gt;VBOXWEB_USER=vbox&lt;/code&gt; to file:&lt;/p&gt;
sudo vi /etc/default/virtualbox

&lt;p&gt;Start the service:&lt;/p&gt;
sudo /etc/init.d/vboxweb-service start

&lt;h3 id=&#34;done:f2d7fafa77e4f10c223d7eeab65bce2b&#34;&gt;Done&lt;/h3&gt;

&lt;p&gt;Now we can open bowser and go to &lt;code&gt;http://server/vbox&lt;/code&gt; and login with username &lt;code&gt;admin&lt;/code&gt; and password &lt;code&gt;admin&lt;/code&gt; (you can change it when login into phpvirtualbox).&lt;/p&gt;

&lt;p&gt;We can see the view is so familiar, that&amp;rsquo;s it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.wenzhixin.net.cn/2015/09/07/finish.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>KVM 虚拟机的学习和使用</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/kvm_study</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/kvm_study</guid>
      <description>

&lt;p&gt;KVM 是 Kernel-based Virtual Machine的简称，是一个开源的系统虚拟化模块，是基于硬件的完全虚拟化。&lt;/p&gt;

&lt;h3 id=&#34;查看硬件是否支持:0fe43c51449a66e046d87a7538942507&#34;&gt;查看硬件是否支持&lt;/h3&gt;

&lt;p&gt;通过命令行可以查看硬件是否支持：&lt;/p&gt;
# INTEL芯片
grep vmx /proc/cpuinfo

# AMD芯片
grep svm /proc/cpuinfo

# 不知道芯片的
egrep &#39;(vmx|svm)&#39; /proc/cpuinfo

&lt;p&gt;假如有输出，表示 cpu 是支持 KVM 虚拟机的。&lt;/p&gt;

&lt;h3 id=&#34;ubuntu-下安装-kvm:0fe43c51449a66e046d87a7538942507&#34;&gt;Ubuntu 下安装 KVM&lt;/h3&gt;

&lt;p&gt;基本安装包：&lt;/p&gt;
sudo apt-get install kvm libvirt-bin ubuntu-vm-builder bridge-utils

&lt;p&gt;界面管理：&lt;/p&gt;
sudo apt-get install virt-manager virt-viewer

&lt;h3 id=&#34;使用:0fe43c51449a66e046d87a7538942507&#34;&gt;使用&lt;/h3&gt;

&lt;p&gt;直接打开虚拟机管理器会报错，我们需要用命令行通过 root 方式运行：&lt;/p&gt;
sudo virt-manager

&lt;p&gt;继续学习&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 11.10 将 OpenJDK 换成 Sun JDK 的步骤</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_11.10_will_be_openjdk_into_sun_jdk_steps</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_11.10_will_be_openjdk_into_sun_jdk_steps</guid>
      <description>&lt;p&gt;1、加入repository： &lt;/p&gt;

&lt;p&gt;sudo add-apt-repository &amp;ldquo;deb &lt;a href=&#34;http://cz.archive.Ubuntu.com/ubuntu&#34;&gt;http://cz.archive.Ubuntu.com/ubuntu&lt;/a&gt;
hardy-updates main multiverse&amp;rdquo;&lt;/p&gt;

&lt;p&gt;(vi /etc/apt/sources.list)&lt;/p&gt;

&lt;p&gt;2、更新源：&lt;/p&gt;

&lt;p&gt;sudo apt-get update&lt;/p&gt;

&lt;p&gt;3、安装 jdk 和 jre：&lt;/p&gt;

&lt;p&gt;sudo apt-get install sun-java6-jdk sun-java6-jre&lt;/p&gt;

&lt;p&gt;4、切换为 Sun JDK：&lt;/p&gt;

&lt;p&gt;sudo update-java-alternatives -s java-6-sun&lt;/p&gt;

&lt;p&gt;(ls /usr/lib/jvm)&lt;/p&gt;

&lt;p&gt;5、查看是否切换成功：&lt;/p&gt;

&lt;p&gt;java -version&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 11.10 将 OpenJDK 换成 Sun JDK 的步骤</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_11.10_will_be_openjdk_into_sun_jdk_steps</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_11.10_will_be_openjdk_into_sun_jdk_steps</guid>
      <description>&lt;p&gt;1、加入repository： &lt;/p&gt;

&lt;p&gt;sudo add-apt-repository &amp;ldquo;deb &lt;a href=&#34;http://cz.archive.Ubuntu.com/ubuntu&#34;&gt;http://cz.archive.Ubuntu.com/ubuntu&lt;/a&gt;
hardy-updates main multiverse&amp;rdquo;&lt;/p&gt;

&lt;p&gt;(vi /etc/apt/sources.list)&lt;/p&gt;

&lt;p&gt;2、更新源：&lt;/p&gt;

&lt;p&gt;sudo apt-get update&lt;/p&gt;

&lt;p&gt;3、安装 jdk 和 jre：&lt;/p&gt;

&lt;p&gt;sudo apt-get install sun-java6-jdk sun-java6-jre&lt;/p&gt;

&lt;p&gt;4、切换为 Sun JDK：&lt;/p&gt;

&lt;p&gt;sudo update-java-alternatives -s java-6-sun&lt;/p&gt;

&lt;p&gt;(ls /usr/lib/jvm)&lt;/p&gt;

&lt;p&gt;5、查看是否切换成功：&lt;/p&gt;

&lt;p&gt;java -version&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 12.04 安装 Nodejs</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/installing_node_on_ubuntu</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/installing_node_on_ubuntu</guid>
      <description>&lt;p&gt;命令行：&lt;/p&gt;
sudo apt-get install python-software-properties
sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs npm

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager&#34;&gt;Installing Node.js via package manager&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 12.04 安装 Subversion 1.7</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/installing_subversion_on_ubuntu</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/installing_subversion_on_ubuntu</guid>
      <description>&lt;p&gt;命令行：&lt;/p&gt;
sudo apt-get install python-software-properties
sudo apt-add-repository ppa:dominik-stadler/subversion-1.7
sudo apt-get update
sudo apt-get install subversion
</description>
    </item>
    
    <item>
      <title>Ubuntu 12.04 设置 VPN</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_set_vpn</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_set_vpn</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. 设置 - 网络 - VPN 连接 - 配置 VPN&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 添加 VPN - 新建 PPTP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 输入正确的网关、用户名、密码&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 选择高级 - 勾选使用点到点加密(MPPE)(P)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. 设置 IPv4 路由，添加路由并勾选仅将此连接用于相对应的网络上的资源：&lt;/strong&gt;&lt;/p&gt;
地址：192.168.1.0 // 网关相对应的地址  
子网掩码：255.255.255.0  
网关：192.168.1.1  

&lt;p&gt;&lt;strong&gt;6. 连接 VPN (搞定！)&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 12.10 VirtualBox 问题</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_vbox_install</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_vbox_install</guid>
      <description>

&lt;h4 id=&#34;问题:50a56da5bddf04658d0f2c6daef91b49&#34;&gt;问题：&lt;/h4&gt;

&lt;p&gt;Ubuntu 12.10 unable to find sources of your current kernel&lt;/p&gt;

&lt;h4 id=&#34;错误信息:50a56da5bddf04658d0f2c6daef91b49&#34;&gt;错误信息：&lt;/h4&gt;
Kernel driver not installed (rc=-1908)

The VirtualBox Linux kernel driver (vboxdrv) is either not loaded or there is a permission problem with /dev/vboxdrv. Please reinstall the kernel module by executing

&#39;/etc/init.d/vboxdrv setup&#39;

as root. If it is available in your distribution, you should install the DKMS package first. This package keeps track of Linux kernel changes and recompiles the vboxdrv kernel module if necessary.

&lt;h4 id=&#34;解决:50a56da5bddf04658d0f2c6daef91b49&#34;&gt;解决：&lt;/h4&gt;
sudo apt-get install dkms build-essential linux-headers-generic

sudo /etc/init.d/vboxdrv setup
</description>
    </item>
    
    <item>
      <title>Ubuntu 12.10 桌面美化及软件安装</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_desktop</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_desktop</guid>
      <description>

&lt;h3 id=&#34;1-安装-qq-聊天工具:2bfcfcf41f077d2ac569743285325f74&#34;&gt;1. 安装 QQ 聊天工具&lt;/h3&gt;

&lt;p&gt;下载安装包 deb&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.longene.org/forum/viewtopic.php?f=6&amp;amp;t=4700&#34;&gt;wine qq 2012 for linux Ubuntu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装：&lt;/p&gt;
sudo dpkg -i WineQQ2012-20121221-Longene.deb

&lt;p&gt;效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.wenzhixin.net.cn/2013/03/29/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-安装-cairo-dock-工具栏:2bfcfcf41f077d2ac569743285325f74&#34;&gt;2. 安装 cairo dock 工具栏&lt;/h3&gt;
sudo add-apt-repository ppa:cairo-dock-team/ppa
sudo apt-get update
sudo apt-get install cairo-dock cairo-dock-plug-ins

&lt;p&gt;效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.wenzhixin.net.cn/2013/03/29/2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-隐藏-unity-工具栏:2bfcfcf41f077d2ac569743285325f74&#34;&gt;3. 隐藏 unity 工具栏&lt;/h3&gt;

&lt;p&gt;安装 CompizConfig Settings Manager：&lt;/p&gt;
sudo apt-get install compizconfig-settings-manager

&lt;p&gt;打开 CompizConfig设置管理器 -&amp;gt; 桌面 -&amp;gt; Ubuntu Unity Plugin&lt;/p&gt;

&lt;p&gt;将 Hide Luancher 选项修改为 Autohide&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 12.10 添加 node 应用为自启动服务</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_node_app_service</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_node_app_service</guid>
      <description>&lt;p&gt;开发 node 应用之后，启动的方式一般是通过 &lt;code&gt;node app&lt;/code&gt; 或者 &lt;code&gt;node app &amp;amp;&lt;/code&gt; 来运行，
十分不方便，这里将以本 blog 应用为例介绍如何添加为自启动的服务。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;用户名：username&lt;/li&gt;
&lt;li&gt;blog 位置：/home/username/blog&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;首先服务名取为 blog：&lt;/p&gt;
sudo vi /etc/init/blog.conf

&lt;p&gt;输入以下内容：&lt;/p&gt;
# blog

description &#34;blog&#34;

start on filesystem or runlevel [2345]
stop on runlevel [!2345]

setuid useranme
chdir /home/username/blog

respawn

exec /usr/bin/nodejs /home/useranme/blog/app.js

&lt;p&gt;保存，便可以使用以下命令了：&lt;/p&gt;
sudo service blog start
sudo service blog restart
sudo service blog stop
sudo service blog status
</description>
    </item>
    
    <item>
      <title>Ubuntu 下不能访问 Windows 文件系统</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_unable_to_access_windows</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_unable_to_access_windows</guid>
      <description>

&lt;p&gt;Ubuntu 和 Windows 双系统下，Ubuntu 不能访问 Windows 下的分区，例如：&lt;code&gt;/dev/sdb1&lt;/code&gt;，显示如下错误：&lt;/p&gt;
Error mounting /dev/sdb1 exited with non-zero exit status 14: The disk contains an unclean file system (0, 0).
Metadata kept in Windows cache, refused to mount.
Failed to mount &#39;/dev/sdb1&#39;: Operation not permitted
The NTFS partition is in an unsafe state. Please resume and shutdown
Windows fully (no hibernation or fast restarting), or mount the volume
read-only with the &#39;ro&#39; mount option.

&lt;h3 id=&#34;解决:5af504e3a6dfa89ab0895ec157811330&#34;&gt;解决&lt;/h3&gt;

&lt;p&gt;不确定具体是什么原因引起这个错误，应该是 Windows 没有正确关闭所引起。可以通过 &lt;code&gt;ntfsfix&lt;/code&gt; 命令，来对 NTFS 磁盘进行检查和修复。&lt;/p&gt;
$ sudo ntfsfix /dev/sdb1
Mounting volume... The disk contains an unclean file system (0, 0).
Metadata kept in Windows cache, refused to mount.
FAILED
Attempting to correct errors... 
Processing $MFT and $MFTMirr...
Reading $MFT... OK
Reading $MFTMirr... OK
Comparing $MFTMirr to $MFT... OK
Processing of $MFT and $MFTMirr completed successfully.
Setting required flags on partition... OK
Going to empty the journal ($LogFile)... OK
Checking the alternate boot sector... OK
NTFS volume version is 3.1.
NTFS partition /dev/sdb1 was processed successfully.
</description>
    </item>
    
    <item>
      <title>Ubuntu 下安装音乐播放器</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_music_player</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ubuntu_music_player</guid>
      <description>&lt;p&gt;对于喜欢听歌的人来说，音乐播放器还是挺重要的，
但是不像 windows 一样，很多流行的播放器都没有 ubuntu 版。&lt;/p&gt;

&lt;p&gt;这里记录下安装 Audacious 播放器，还是比较强大的，可以支持 ape 格式的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.wenzhixin.net.cn/2014/01/25/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;安装：&lt;/strong&gt;&lt;/p&gt;
sudo add-apt-repository ppa:nilarimogard/webupd8
sudo apt-get update
sudo apt-get install audacious audacious-plugins

&lt;p&gt;当然歌词显示也是很有必要的，使用 &lt;a href=&#34;https://code.google.com/p/osd-lyrics/&#34;&gt;osd-lyrics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;安装：&lt;/strong&gt;&lt;/p&gt;
sudo add-apt-repository ppa:osd-lyrics/ppa
sudo apt-get update
sudo apt-get install osdlyrics
</description>
    </item>
    
    <item>
      <title>Ubuntu 下无密码访问及文件同步</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/ssh_rsync</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/ssh_rsync</guid>
      <description>

&lt;h4 id=&#34;服务器端配置-ssh:c438dcfbdb89c88db42e10ae91da1f05&#34;&gt;服务器端配置 ssh&lt;/h4&gt;

&lt;p&gt;修改客户端sshd配置文件&lt;/p&gt;
sudo vi /etc/ssh/sshd_config

&lt;p&gt;修改为&lt;/p&gt;
RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile     %h/.ssh/authorized_keys

&lt;p&gt;重启ssh服务&lt;/p&gt;
sudo /etc/init.d/sshd restart

&lt;hr /&gt;

&lt;h4 id=&#34;配置密钥:c438dcfbdb89c88db42e10ae91da1f05&#34;&gt;配置密钥&lt;/h4&gt;

&lt;p&gt;在客户端生成公钥和私钥文件&lt;/p&gt;
ssh-keygen
cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys

&lt;p&gt;scp 到服务器端&lt;/p&gt;
scp ~/.ssh/authorized_keys username@hostname:~/.ssh/authorized_keys

&lt;p&gt;修改 config 文件&lt;/p&gt;
vi ~/.ssh/config

&lt;p&gt;添加&lt;/p&gt;
host sshname
    HostName hostname(ip address)
    user username
    IdentityFile ~/.ssh/id_rsa

&lt;p&gt;测试&lt;/p&gt;
ssh sshname (-p port)

&lt;hr /&gt;

&lt;h4 id=&#34;rsync-同步:c438dcfbdb89c88db42e10ae91da1f05&#34;&gt;rsync 同步&lt;/h4&gt;
rsync (--exclude=exclude) -avz (-e &#34;ssh -p 22&#34;) ./ sshname:~/path

&lt;hr /&gt;

&lt;p&gt;注：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;括号为可选&lt;/li&gt;
&lt;li&gt;hostname 指域名或者 IP 地址&lt;/li&gt;
&lt;li&gt;username 对应服务器的用户名&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
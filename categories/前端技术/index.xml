<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端技术 on 文翼的博客</title>
    <link>http://blog.wenzhixin.net.cn/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 前端技术 on 文翼的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>wenzhixin.net.cn 粤ICP备15117953号</copyright>
    <lastBuildDate>Mon, 11 Jan 2016 13:30:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.wenzhixin.net.cn/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>通过 css 设置图片的高度与宽度相等</title>
      <link>http://blog.wenzhixin.net.cn/2016/01/11/css_height_equals_width_with_css/</link>
      <pubDate>Mon, 11 Jan 2016 13:30:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2016/01/11/css_height_equals_width_with_css/</guid>
      <description>在图片长宽不相等的情况下，想将长宽设置为相等并且自适应屏幕，可以通过 js 的方式进行设置并通过监听 resize 来实时更新，但是这种方式很麻烦。 这里通过 css 来</description>
    </item>
    
    <item>
      <title>react-memory：基于 nodejs &#43; bower &#43; react 的文字记忆游戏</title>
      <link>http://blog.wenzhixin.net.cn/2015/06/07/react_memory/</link>
      <pubDate>Sun, 07 Jun 2015 13:30:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2015/06/07/react_memory/</guid>
      <description>前言 现在最热门的前端框架，毫无疑问是 React，React 是由 Facebook 出品的 JavaScript 框架，由于该框架比较新，比较少中文的资料。这几天看了很多篇关于 react 的英</description>
    </item>
    
    <item>
      <title>开源所带来的——记 DBackup 4.0 发布和 Bootstrap Table 插件的开发</title>
      <link>http://blog.wenzhixin.net.cn/2014/11/08/bootstrap-table/</link>
      <pubDate>Sat, 08 Nov 2014 02:14:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/11/08/bootstrap-table/</guid>
      <description>源起 最最开始的时候，在写公司的考勤系统，系统的功能十分简单，只需要简单地查询数据和展示数据（无需增加、修改和删除），后台接口使用的是标准的 Restful</description>
    </item>
    
    <item>
      <title>编写 WebStorm 实用工具</title>
      <link>http://blog.wenzhixin.net.cn/2014/11/04/webstorm_tools/</link>
      <pubDate>Tue, 04 Nov 2014 23:29:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/11/04/webstorm_tools/</guid>
      <description>在写代码的时候，很多时候（例如写 jQuery 插件）需要将 html 代码转换为 js 模板。例如将下面的 html 代码： 1 2 3 4 5 &amp;lt;ul&amp;gt; &amp;lt;li class=&amp;#34;item&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;#&amp;#34;&amp;gt;Item 1&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; 放到 js 中： 1 2 3 4 5 6 7 8 var</description>
    </item>
    
    <item>
      <title>chrome 浏览器 console 面板直接使用 JSON 数据进行调试错误问题</title>
      <link>http://blog.wenzhixin.net.cn/2014/11/02/chrome_console_error/</link>
      <pubDate>Sun, 02 Nov 2014 23:49:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/11/02/chrome_console_error/</guid>
      <description>今天在微博上看到小鱼在问：https://gist.github.com/sofish/c250881989aaa10c029d 为什么会出错</description>
    </item>
    
    <item>
      <title>如何不用 eval 的方式通过字符串调用 JavaScript 的方法</title>
      <link>http://blog.wenzhixin.net.cn/2014/10/03/call_string_function/</link>
      <pubDate>Fri, 03 Oct 2014 23:28:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/10/03/call_string_function/</guid>
      <description>由于 bootstrap-table 插件需要支持data-name=&amp;quot;functionName&amp;quot;的方式，所以在实现的过程中使用了eval的方法。我们知</description>
    </item>
    
    <item>
      <title>使用 JavaScript 转换数据单位</title>
      <link>http://blog.wenzhixin.net.cn/2014/09/03/convert_size_using_javascript/</link>
      <pubDate>Wed, 03 Sep 2014 17:31:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/09/03/convert_size_using_javascript/</guid>
      <description>我们知道，千字节是一个计量单位，虽然从字面上理解代表着1000，但是专业术语kilobyte在计算机科学和信息技术等领域有两种含义，分别代表</description>
    </item>
    
    <item>
      <title>通过 vim 编辑网页文本输入框</title>
      <link>http://blog.wenzhixin.net.cn/2014/08/30/edit_text_gvim/</link>
      <pubDate>Sat, 30 Aug 2014 14:58:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/08/30/edit_text_gvim/</guid>
      <description>对于文本编辑和编写代码，我们常常会用到 vim，使用 vim 的好处在这里就不多说了。那么能不能在浏览器中的文本输入框中也使用 vim 来编辑呢，编辑完之后再</description>
    </item>
    
    <item>
      <title>表格固定表头的问题和解决方案</title>
      <link>http://blog.wenzhixin.net.cn/2014/08/10/fixed_table/</link>
      <pubDate>Sun, 10 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/08/10/fixed_table/</guid>
      <description>在写插件bootstrap table的时候，当数据过多的时候，需要对表格的 thead进行固定，然后滚动表格的tbody。但是在实际的操作上，</description>
    </item>
    
    <item>
      <title>理解 JavaScript 中的 Array.prototype.slice.apply(arguments)</title>
      <link>http://blog.wenzhixin.net.cn/2014/08/03/slice_arguments/</link>
      <pubDate>Sun, 03 Aug 2014 23:28:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/08/03/slice_arguments/</guid>
      <description>假如你是一个 JavaScript 开发者，你可能见到过 Array.prototype.slice.apply(arguments) 这样的用法，然后你会问，这么写是什么意思呢？ 这个语法其实不难理解，只是它有些不好看。Array 是 JavaScript 的基本</description>
    </item>
    
    <item>
      <title>设置 viewport 实现定宽网页 WebApp 下布局自适应</title>
      <link>http://blog.wenzhixin.net.cn/2014/08/01/viewport_mobile/</link>
      <pubDate>Fri, 01 Aug 2014 23:13:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/08/01/viewport_mobile/</guid>
      <description>一般来说，我们实现布局自适应可以有以下几种方式： 使用流动布局（fluid grid） 根据屏幕大小选择加载不同的CSS 使用 CSS 的@media规则 详</description>
    </item>
    
    <item>
      <title>IE8 文件上传问题分析小记</title>
      <link>http://blog.wenzhixin.net.cn/2014/07/30/ie8_file_problem/</link>
      <pubDate>Wed, 30 Jul 2014 23:31:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/07/30/ie8_file_problem/</guid>
      <description>先吐槽一番，IE 浏览器让前端开发人员又恨又郁闷，但是没有办法，谁让中国如此多的用户呢。很多时候，一个简单的问题，可能需要花上大半天的时间才能</description>
    </item>
    
    <item>
      <title>读《Backbone.js 实战》</title>
      <link>http://blog.wenzhixin.net.cn/2014/07/06/backbone_book/</link>
      <pubDate>Sun, 06 Jul 2014 07:31:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/07/06/backbone_book/</guid>
      <description>Backbone 是一个轻量级 JavaScript 的 MVC 框架，配合 Underscore 这个依赖库，我们可以打造出强大的 MVC 应用程序。其实很早就用到 Backbone + Underscore 进行网站和应用程序的开发了，只是国内一直没有</description>
    </item>
    
    <item>
      <title>Bootstrap a 标签按钮使用 prop 方法</title>
      <link>http://blog.wenzhixin.net.cn/2014/06/18/a_prop_problem/</link>
      <pubDate>Wed, 18 Jun 2014 13:31:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/06/18/a_prop_problem/</guid>
      <description>问题 将 jQuery 从 1.5.2 升级到 1.7.2 之后，统一将attr(&#39;disabled&#39;, &#39;disabled&#39;)改为prop(&#39;disabled&#39;, true)，将at</description>
    </item>
    
    <item>
      <title>在 Backbone.js 中自定义 fetch 错误处理</title>
      <link>http://blog.wenzhixin.net.cn/2014/06/14/backbone_custom_fetch_errors/</link>
      <pubDate>Sat, 14 Jun 2014 23:55:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/06/14/backbone_custom_fetch_errors/</guid>
      <description>Backbone 作为 JavaScript MVC 框架的一个优势是它可以通过监听事件来处理事情。但是根据 Collection 的相关文档，可以看到：当你使用fetch方法来进行 Ajax 请求的时候，假如发生了</description>
    </item>
    
    <item>
      <title>在 JavaScript 中定义常量（不可修改）</title>
      <link>http://blog.wenzhixin.net.cn/2014/05/07/javascript_define_const/</link>
      <pubDate>Wed, 07 May 2014 23:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/05/07/javascript_define_const/</guid>
      <description>define-const.js 在《JavaScript 启示录》的最后一章中提到: &amp;gt; Math 属性是无法改变的常数。这与 JavaScript 可变性质相悖，因此这些属性全部大写。 于是在浏览器（包括 I</description>
    </item>
    
    <item>
      <title>判断浏览器是否为 IE11</title>
      <link>http://blog.wenzhixin.net.cn/2014/05/05/detect_ie11/</link>
      <pubDate>Mon, 05 May 2014 23:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/05/05/detect_ie11/</guid>
      <description>项目中需要判断对浏览器的支持，使用 jQuery 去判断一个浏览器是否为 IE11 的时候，会识别错误。 这是因为 IE11 使用了和之前版本不一样的 User-agent： 1 Mozilla/5.0</description>
    </item>
    
    <item>
      <title>如何获取 div 的实际高度</title>
      <link>http://blog.wenzhixin.net.cn/2014/05/04/get_div_outer_height/</link>
      <pubDate>Sun, 04 May 2014 22:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/05/04/get_div_outer_height/</guid>
      <description>在实际开发中，需要对 div 的高度进行计算并自动设置高度，但是遇到了这样的一个问题： 1 2 3 4 5 &amp;lt;div id=&amp;#34;outer&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;inner&amp;#34; style=&amp;#34;height: 50px; margin-top: 20px; margin-bottom: 20px;&amp;#34;&amp;gt; 如何获取 div 的实际高度 &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 1 2 3 4</description>
    </item>
    
    <item>
      <title>一步一步学习 AngularJS（八）</title>
      <link>http://blog.wenzhixin.net.cn/2014/04/22/angular_scutech_step7/</link>
      <pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/04/22/angular_scutech_step7/</guid>
      <description>上一节 在这一小节，我们将学习如何创建布局模板，和如何通过添加路由来创建多页面的应用， 将使用新的 Angular 模块ngRoute。 在开始之前，我们先来看看</description>
    </item>
    
    <item>
      <title>CSS 自定义字体</title>
      <link>http://blog.wenzhixin.net.cn/2014/04/21/css_font_face/</link>
      <pubDate>Mon, 21 Apr 2014 13:22:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/04/21/css_font_face/</guid>
      <description>介绍 通过 CSS 的 @font-face 属性可以实现在网页中嵌入任意字体，例如自定字体、或者是自定义图标（bootstrap）。 为了能在主流浏览器中都能正常显示自定义</description>
    </item>
    
    <item>
      <title>一步一步学习 AngularJS（七）</title>
      <link>http://blog.wenzhixin.net.cn/2014/03/10/angular_scutech_step6/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/03/10/angular_scutech_step6/</guid>
      <description>上一节 在这一小节，我们为列表中的产品添加图片和链接，下一小节将使用链接跳转到详细的页面。 在开始之前，我们先来看看 演示， 也可以通过链接下载 zip 包</description>
    </item>
    
    <item>
      <title>一步一步学习 AngularJS（六）</title>
      <link>http://blog.wenzhixin.net.cn/2014/02/23/angular_scutech_step5/</link>
      <pubDate>Sun, 23 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/02/23/angular_scutech_step5/</guid>
      <description>上一节 下一节 在之前几个小节中，我们的列表都是使用固定的数据。 在这一小节，我们使用 $http 请求从后台获取数据。 在开始之前，我们先来看看 演示， 也可以通</description>
    </item>
    
    <item>
      <title>一步一步学习 AngularJS（五）</title>
      <link>http://blog.wenzhixin.net.cn/2014/02/22/angular_scutech_step4/</link>
      <pubDate>Sat, 22 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/02/22/angular_scutech_step4/</guid>
      <description>上一节 下一节 在这一小节，我们增加一个功能可以用来对列表进行排序。 在开始之前，我们先来看看 演示， 也可以通过链接下载 zip 包。 可以看到在搜索框下面，</description>
    </item>
    
    <item>
      <title>一步一步学习 AngularJS（四）</title>
      <link>http://blog.wenzhixin.net.cn/2014/02/21/angular_scutech_step3/</link>
      <pubDate>Fri, 21 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/02/21/angular_scutech_step3/</guid>
      <description>上一节 下一节 在这一小节，我们增加一个简单的input输入框，用于搜索。 在开始之前，我们先来看看 演示， 也可以通过链接下载 zip 包。 控制器 我们没有改</description>
    </item>
    
    <item>
      <title>一步一步学习 AngularJS（三）</title>
      <link>http://blog.wenzhixin.net.cn/2014/02/20/angular_scutech_step2/</link>
      <pubDate>Thu, 20 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/02/20/angular_scutech_step2/</guid>
      <description>上一节 下一节 在这一小节，我们使用 Angular 来动态生成上一节的页面。 在开始之前，我们先来看看 演示， 也可以通过链接下载 zip 包。 一个应用可以有很多种代码结构</description>
    </item>
    
    <item>
      <title>一步一步学习 AngularJS（二）</title>
      <link>http://blog.wenzhixin.net.cn/2014/02/19/angular_scutech_step1/</link>
      <pubDate>Wed, 19 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/02/19/angular_scutech_step1/</guid>
      <description>上一节 下一节 在这一小节，为了说明 Angular 是如何增强标准 HTML 的，这一节我们来创建静态的 HTML 页面， 顺便也会用到 bootstrap 相关的组件，然后下一节我们将使用 Angul</description>
    </item>
    
    <item>
      <title>一步一步学习 AngularJS（一）</title>
      <link>http://blog.wenzhixin.net.cn/2014/02/18/angular_scutech_step0/</link>
      <pubDate>Tue, 18 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/02/18/angular_scutech_step0/</guid>
      <description>下一节 今天开始一步一步学习 AngularJS 的教程之旅。 在这一小节中，我们将学习最基础、同时也是重要的代码结构和数据绑定。 在开始之前，我们先来看看 演示， 也可</description>
    </item>
    
    <item>
      <title>canvas 如何在保留 background 的情况下重置画布</title>
      <link>http://blog.wenzhixin.net.cn/2014/02/16/canvas_background/</link>
      <pubDate>Sun, 16 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/02/16/canvas_background/</guid>
      <description>前几天在用 canvas 实现动画的时候，因为是需要设置画图的背景， 所以一开始想到的就是使用 canvas 的 drawImage() 方法： 1 context.drawImage(img, x, y, width, height); 但是后面发现了在此基础上画动画的话，假</description>
    </item>
    
    <item>
      <title>制作漂亮的邮件模板</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/24/send_email_template/</link>
      <pubDate>Fri, 24 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/24/send_email_template/</guid>
      <description>上一篇中讲到如何通过 nodejs 发送通知邮件，在发送通知邮件的时候， 假如可以有漂亮的邮件模板就更好了，但是出于安全的原因， 邮件一般不支持 link 或者 style 样式，</description>
    </item>
    
    <item>
      <title>Web 开发——实现滑动特效</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/21/mobile_transition/</link>
      <pubDate>Tue, 21 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/21/mobile_transition/</guid>
      <description>先看下 demo 声明 html 标记和 css 样式： 1 2 3 4 5 6 7 8 9 10 11 &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;home&amp;#34; class=&amp;#34;page stage-center&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;Home Page&amp;lt;/h1&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div id=&amp;#34;products&amp;#34; class=&amp;#34;page stage-right&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;Products Page&amp;lt;/h1&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div id=&amp;#34;about&amp;#34; class=&amp;#34;page stage-right&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;About Page&amp;lt;/h1&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 .container { overflow:</description>
    </item>
    
    <item>
      <title>详解 jQuery.extend() 方法</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/17/jquery_extend/</link>
      <pubDate>Fri, 17 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/17/jquery_extend/</guid>
      <description>今天在写插件，使用$.extend({}, defaults, options)的时候发现漏写了 {}，浪费了一些时间， 所以详细记录下该方法的 API 和使用。 API 如下： jQuery.extend(</description>
    </item>
    
    <item>
      <title>Ubuntu 使用 WebStorm IDE 小记</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/16/use_webstorm/</link>
      <pubDate>Thu, 16 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/16/use_webstorm/</guid>
      <description>WebStorm 是 jetbrains 公司旗下一款 JavaScript 开发工具，被广大 JS 开发者誉为“Web前端开发神器”。 安装 下载：http://www.jetbrains.com/webs</description>
    </item>
    
    <item>
      <title>AngularJS学习笔记——购物车实例与解析</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/10/angular_cart_demo/</link>
      <pubDate>Fri, 10 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/10/angular_cart_demo/</guid>
      <description>通过构建一款实例来了解 AngularJS 的特性，貌似还是比较有效的。 先来看看效果。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 &amp;lt;!doctype html&amp;gt; &amp;lt;html ng-app&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;</description>
    </item>
    
    <item>
      <title>web 前端开发学习资料</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/08/web_study/</link>
      <pubDate>Wed, 08 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/08/web_study/</guid>
      <description>知识结构 编程语言 HTML/CSS JavaScript 开发IDE与插件 Eclipse webstorm Aptana Emmet 调试工具 Firebug Chrome Dev Tools IETester Fiddler Coding style JSLint JSHint CSSLint 前端库/框架 jQuery Underscore Backbone AngularJS Boostrap 类库模块化 Seajs Require.js 项目构建 spmjs Grunt FIS Google Clousure Complier 代码测试 QUnit</description>
    </item>
    
    <item>
      <title>AngularJS学习笔记——AngularJS简介</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/07/angularjs_study_note_introduction/</link>
      <pubDate>Tue, 07 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/07/angularjs_study_note_introduction/</guid>
      <description>自己在前端开发中还有很多新知识要学习，今天开始进入《用 AngularJS 开发下一代 Web 应用》一书的学习之旅。 AngularJS是一款开源 JavaScript函</description>
    </item>
    
    <item>
      <title>ubuntu 下将 word 文件转换为 markdown</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/03/convert_word_to_markdown/</link>
      <pubDate>Fri, 03 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/03/convert_word_to_markdown/</guid>
      <description>主要介绍如何将 word 文件转换为 markdown 文件。 第一步：安装 unoconv 和 pandoc 1 sudo apt-get install unoconv pandoc 第二步：将 word 文件转换 html 1 unoconv -f html -o file.html file.docx -f html：指定我们要转为 html 格式（for</description>
    </item>
    
    <item>
      <title>lscache 介绍</title>
      <link>http://blog.wenzhixin.net.cn/2014/01/02/lscache_introduction/</link>
      <pubDate>Thu, 02 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2014/01/02/lscache_introduction/</guid>
      <description>介绍 lscache 是一个带有时间戳的缓存库，提供类似内存缓存行为。 使用 html5 localStorage 模拟内存缓冲功能，这样就可以在客户端缓冲数据， 并对每块数据关联一个过期时间。如</description>
    </item>
    
    <item>
      <title>bootstrap menu 插件介绍</title>
      <link>http://blog.wenzhixin.net.cn/2013/12/29/bootstrap_menu_guide/</link>
      <pubDate>Sun, 29 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/12/29/bootstrap_menu_guide/</guid>
      <description>前言 平时在定义目录菜单的时候会使用 ul、li 等，定义和维护起来不是很方便， 所以就写成了 bootstrap 的 jQuery 的插件。 如何使用 使用起来非常简单，先来看看如何使</description>
    </item>
    
    <item>
      <title>使用 jQuery 修复 IE7 z-index 的 bug</title>
      <link>http://blog.wenzhixin.net.cn/2013/12/06/jquery_ie7_zindex/</link>
      <pubDate>Fri, 06 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/12/06/jquery_ie7_zindex/</guid>
      <description>现象： 先来看下这段代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 td { text-align: center; } .parent { width: 300px; height: 30px; position: relative;</description>
    </item>
    
    <item>
      <title>鼠标滚轮事件 MouseWheel</title>
      <link>http://blog.wenzhixin.net.cn/2013/12/03/mousewheel_event/</link>
      <pubDate>Tue, 03 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/12/03/mousewheel_event/</guid>
      <description>前言 编写 jQuery SideMenu 插件的时候， 对目录过长的进行鼠标滚动操作，因为默认的 scroll 不好看，所以对滚动条进行了自定义。 先看看演示 demo css 设置 首先将 parent 的 overflow 设置为 hi</description>
    </item>
    
    <item>
      <title>解决 jshint 的语法警告</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/29/jshint_warnings_resolve/</link>
      <pubDate>Fri, 29 Nov 2013 09:12:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/29/jshint_warnings_resolve/</guid>
      <description>问题： Wrap the regexp literal in parens to disambiguate the slash operator 示例代码： 1 2 3 function isMe(name) { return /^wenzhixin$/.test(name); } 警告原因： 虽然 JavaScript 解析器可以正常工作，但是对于解析器来说，解析 “/” 的完整含义是比较困</description>
    </item>
    
    <item>
      <title>Ajax 文件上传——通过 html5 的方法</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/28/ajax_file_upload_html5/</link>
      <pubDate>Thu, 28 Nov 2013 21:17:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/28/ajax_file_upload_html5/</guid>
      <description>html5 方法 上篇文章讲到 Ajax 文件上传是如何通过 iframe 的方法，这里我们通过 html5 的方法来进行文件的上传。 在 html5 标准中，XMLHttpRequest 对象被重新定义</description>
    </item>
    
    <item>
      <title>Ajax 文件上传——通过 iframe 的方法</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/27/ajax_file_upload_iframe/</link>
      <pubDate>Wed, 27 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/27/ajax_file_upload_iframe/</guid>
      <description>前言 由于安全问题，浏览器不允许通过 XMLHttpRequest（又名XHR）的方式上传文件。 那么如何在不刷新界面的情况下实现文件的上传呢？ 解</description>
    </item>
    
    <item>
      <title>jQuery file upload 插件 change 只生效一次</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/26/jquery_file_upload_change_once/</link>
      <pubDate>Tue, 26 Nov 2013 21:32:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/26/jquery_file_upload_change_once/</guid>
      <description>1. 前言 在使用 AjaxFileUpload 插件的时候， 发现使用 jQuery 监听 change 事件只生效一次 1 2 3 4 $(&amp;#39;#upload&amp;#39;).change(function() { }); 那么是为什么呢？ 2. 原因 找了下原因，原来是 130 行对事件进行了 unbind 1 2 jQuery(io).unbind() 3. 解决</description>
    </item>
    
    <item>
      <title>jQuery 打造月份选择器插件</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/23/jquery_month_picker/</link>
      <pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/23/jquery_month_picker/</guid>
      <description>项目中需要用到月份选择器，找到了几款日期选择器 datepicker， 但是我不需要选择具体的日期，虽然有个可以支持只显示月份的，但是显得比较臃</description>
    </item>
    
    <item>
      <title>jQuery 判断所有图片加载完成</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/22/all_images_is_loaded/</link>
      <pubDate>Fri, 22 Nov 2013 22:50:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/22/all_images_is_loaded/</guid>
      <description>对于图片的处理，例如幻灯片播放、缩放等，都是依赖于在所有图片完成之后再进行操作。 今天来看下如何判断所有的图片加载完成，而在加载完成之前可以使</description>
    </item>
    
    <item>
      <title>使用 canvas 绘制时钟</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/20/canvas_draw_clock/</link>
      <pubDate>Wed, 20 Nov 2013 23:10:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/20/canvas_draw_clock/</guid>
      <description>今天我们利用 canvas 来画一个基本的时钟程序。通过一边实践一边学习新的知识。 准备工作，我们先定义需要用到的变量： 1 2 &amp;lt;canvas id=&amp;#34;canvas&amp;#34; width=&amp;#34;300&amp;#34; height=&amp;#34;300&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;script src=&amp;#34;clock.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    
    <item>
      <title>post 提交数据到新窗口中</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/19/post_blank_window/</link>
      <pubDate>Tue, 19 Nov 2013 13:08:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/19/post_blank_window/</guid>
      <description>在很多时候，我们需要 post 数据到新的窗口中，例如在需要提交大数据到后台中但是无法通过 url 的时候，或者打印报表等等。 这里记录了 flex 和 js 中如何使用 post 方法</description>
    </item>
    
    <item>
      <title>使用 Chrome 调试和模拟 android 上的页面</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/16/android_chrome_debug/</link>
      <pubDate>Sat, 16 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/16/android_chrome_debug/</guid>
      <description>介绍 通过电脑调试手机上的页面，对于开发移动页面或者开发自适应的界面很有帮助。 本文主要介绍如何使用 chrome 浏览器调试和模拟 android 上的页面。 1. 如何调试 1) 打</description>
    </item>
    
    <item>
      <title>使用 google analytics 和显示页面浏览量</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/15/use_google_analytics_and_display_visits/</link>
      <pubDate>Fri, 15 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/15/use_google_analytics_and_display_visits/</guid>
      <description>Google Analytics 的强大就不说了，因为它代表了这个领域的最高水平。 我们这里主要讲安装和显示每个页面的浏览量。 1. 安装 Google Analytics 注册统计帐号：https://www</description>
    </item>
    
    <item>
      <title>导出或者备份新浪轻博客</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/14/sina_qing_export_or_backup/</link>
      <pubDate>Thu, 14 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/14/sina_qing_export_or_backup/</guid>
      <description>新浪轻博客没有提供 RSS 或者导出等功能，很不方便对博客进行备份或者迁移。 不过我们可以换种思路，那就是对博客网页进行解析从而得到我们想要的内容，包</description>
    </item>
    
    <item>
      <title>nodejs 使用百度翻译 API</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/13/nodejs_use_baidu_translate_api/</link>
      <pubDate>Wed, 13 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/13/nodejs_use_baidu_translate_api/</guid>
      <description>博客（网站）中需要对文章标题进行翻译成英文显示，要求可以批量翻译。 这里使用 nodejs 来对指定内容进行翻译，主要用到的知识点有两个： 使用百度翻译 API</description>
    </item>
    
    <item>
      <title>html5 canvas 画布入门</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/12/hello_canvas/</link>
      <pubDate>Tue, 12 Nov 2013 23:13:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/12/hello_canvas/</guid>
      <description>今天开始学点新东西，canvas 画布，它是一个 HTML5 的一个新元素， 它没有自己的行为，但是定义了一个 API 支持脚本化客户端绘图操作。 既然是入门，也来个</description>
    </item>
    
    <item>
      <title>使用 js 脚本自动安装最新安备客户端</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/11/js_anbay_agent_auto_install/</link>
      <pubDate>Mon, 11 Nov 2013 23:31:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/11/js_anbay_agent_auto_install/</guid>
      <description>每次安备客户端的代码一更新（即使是一行代码），那么我需要做的事情包括： 从 FTP 上下载最新的安装包（包括打开 ftp，输入用户名密码，复制，粘贴等）</description>
    </item>
    
    <item>
      <title>前端工程师必备工具 livejs</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/07/front_end_tool_livejs/</link>
      <pubDate>Thu, 07 Nov 2013 13:13:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/07/front_end_tool_livejs/</guid>
      <description>公司的台式机一直没有用到，于是乎想到能否重复利用起来，在笔记本上做开发，在大显示器上看效果。 有了这样的想法之后，找到了 Live.js， 它可以</description>
    </item>
    
    <item>
      <title>理解并实现 PubSub 模式</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/06/understand_pubsub/</link>
      <pubDate>Wed, 06 Nov 2013 12:54:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/06/understand_pubsub/</guid>
      <description>假如我们正在构建一个类似于 Google Docs 的应用程序，当用户按下一个按键时，需要做的事情有很多： 新字符显示到屏幕上；插入点向后移动；将本次动作加入到撤销</description>
    </item>
    
    <item>
      <title>将本地时间转换为 GMT 时间</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/05/local_time_to_timezone/</link>
      <pubDate>Tue, 05 Nov 2013 13:30:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/05/local_time_to_timezone/</guid>
      <description>在写 RSS 订阅接口的时候，发现最终输出文章的 RSS 时间（GMT时间），在本地上显示的时间和在服务器上显示的时间不一致。 原因是时区不一致，那么在 JavaScript 中，</description>
    </item>
    
    <item>
      <title>markdown 介绍、解析与编辑器</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/02/markdown_and_markdown_editor/</link>
      <pubDate>Sat, 02 Nov 2013 10:42:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/02/markdown_and_markdown_editor/</guid>
      <description>markdown 是一种轻量级标记语言，它允许使用易读易写的纯文本格式编写文档，然后转换成html文档。 markdown 强调可读性高于一切。其实网上有很多介绍 markdown 的文章，这</description>
    </item>
    
    <item>
      <title>理解并实现 underscore 中的 bind 和 bindAll 函数</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/01/understanding_bind_bindall/</link>
      <pubDate>Fri, 01 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/01/understanding_bind_bindall/</guid>
      <description>在开始之前，我们定义了 Person 类： 1 2 3 4 5 6 function Person(name) { this.name = name; } Person.prototype.say = function() { console.log(this.name); } 首先，新建 person 对象： 1 2 var wenyi = new Person(&amp;#39;wenyi&amp;#39;); wenyi.say(); // wenyi 可以看到这里输出的结果是 wenyi，</description>
    </item>
    
    <item>
      <title>html 标签 title 换行方法</title>
      <link>http://blog.wenzhixin.net.cn/2013/10/31/html_title_wrap/</link>
      <pubDate>Thu, 31 Oct 2013 00:51:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/10/31/html_title_wrap/</guid>
      <description>1. 使用换行符换行 换行符分别为：&amp;amp;#10; 或 &amp;amp;#13; 例如： 1 &amp;lt;a href=&amp;#34;http://wenzhixin.net.cn&amp;#34; title=&amp;#34;前端技术&amp;amp;#10;交互设计&amp;amp;#13;移</description>
    </item>
    
    <item>
      <title>nodejs 获取路由的主机列表</title>
      <link>http://blog.wenzhixin.net.cn/2013/10/28/node_agents/</link>
      <pubDate>Mon, 28 Oct 2013 00:30:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/10/28/node_agents/</guid>
      <description>1. 介绍 接着之前，今天的目标是通过 nodejs 获取使用路由的主机名称列表。 路由器的默认登录地址为：http://192.168.1.1 默认的用户名密码都</description>
    </item>
    
    <item>
      <title>nodejs 通过 JSON-RPC 调用 aria2 接口</title>
      <link>http://blog.wenzhixin.net.cn/2013/10/27/nodejs_json_rpc_aria2/</link>
      <pubDate>Sun, 27 Oct 2013 12:50:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/10/27/nodejs_json_rpc_aria2/</guid>
      <description>今天继续之前的下载服务器的开发，第一步是调用文件的 API，第二步是列出应用目录下的所有文件，今天的目标是调用后台接口进行下载。 1. aria2 配置 这里，</description>
    </item>
    
    <item>
      <title>nodejs 异步递归</title>
      <link>http://blog.wenzhixin.net.cn/2013/10/26/nodejs_async/</link>
      <pubDate>Sat, 26 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/10/26/nodejs_async/</guid>
      <description>今天继续之前的下载服务器的开发，第一步调用文件的 API 已经成功了，那么今天的目标是列出应用目录下的所有文件（包括子目录）。 1. 最初代码实现 代码的实</description>
    </item>
    
    <item>
      <title>使用百度云接口</title>
      <link>http://blog.wenzhixin.net.cn/2013/10/24/call_baidu_pan/</link>
      <pubDate>Thu, 24 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/10/24/call_baidu_pan/</guid>
      <description>树莓派 raspberry pi 已经买了好一段时间了，但是实际上却没怎么用到。 一开始买的时候就是打算重复利用宿舍网络资源的，但是却一直没有时间去做开发。 有些事情，</description>
    </item>
    
    <item>
      <title>让你的网站支持自适应界面</title>
      <link>http://blog.wenzhixin.net.cn/2013/10/22/responsive_web/</link>
      <pubDate>Tue, 22 Oct 2013 08:50:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/10/22/responsive_web/</guid>
      <description>1. 介绍 随着智能手机的普及，越来越多的人使用手机上网。 我自己就是，经常懒得开电脑，直接用手机查看网页，简单又方便。 那么，如何才能把自己的博客做</description>
    </item>
    
    <item>
      <title>使用 js 自动生成博客首页文件列表</title>
      <link>http://blog.wenzhixin.net.cn/2013/10/20/auto_create_blog_index/</link>
      <pubDate>Sun, 20 Oct 2013 00:17:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/10/20/auto_create_blog_index/</guid>
      <description>1. 介绍 因为每次写完文章后，都需要手动更新主页文件，打算每天至少写一篇文章。 所以这种重复工作还是交给机器去完成吧。 2. 步骤 1) 遍历文章存放文件夹列</description>
    </item>
    
    <item>
      <title>Bootstrap 禁用 a 按钮</title>
      <link>http://blog.wenzhixin.net.cn/2013/08/12/disable_link/</link>
      <pubDate>Mon, 12 Aug 2013 00:31:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/08/12/disable_link/</guid>
      <description>问题描述： 使用 Bootstrap 的 btn 时，可以使用添加 class=&amp;ldquo;disabled&amp;rdquo; 或者 disabled=&amp;ldquo;disabled&amp;rdquo; 来禁用按钮，可以看到 bootstrap.css 中的代码： 1 2 3 4 5 6 7 8 9 10 11 .btn.disabled, .btn[disabled] { cursor: default; background-color: #e6e6e6; background-image: none; opacity: 0.65; filter: alpha(opacity=65); -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none; } 假</description>
    </item>
    
    <item>
      <title>firefox 利用 Selenium IDE 对 DBackup 进行自动化测试</title>
      <link>http://blog.wenzhixin.net.cn/2013/07/30/firefox_selenium_ide/</link>
      <pubDate>Tue, 30 Jul 2013 01:02:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/07/30/firefox_selenium_ide/</guid>
      <description>今天看《编写可维护的JavaScript》的时候有一章是专门讲 Selenium 对 JavaScript 进行自动化测试的。 在了解了 Selenium 的强大之后，动手试验了一下 firefox 中的 Selenium IDE，还</description>
    </item>
    
    <item>
      <title>Web 前端开发有用的代码片段</title>
      <link>http://blog.wenzhixin.net.cn/2013/06/20/web_code_gist/</link>
      <pubDate>Thu, 20 Jun 2013 23:43:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/06/20/web_code_gist/</guid>
      <description>1. 定时器 经常会用到 setTimeout 和 setInterval 函数，假如可以整合起来，会方便很多： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function timer(func, start, interval, end) { start = start || 0; if (arguments.length &amp;lt;= 2) { setTimeout(func, start); } else { var repeat = function() {</description>
    </item>
    
    <item>
      <title>jQuery 中 attr() 和 prop() 方法的区别</title>
      <link>http://blog.wenzhixin.net.cn/2013/05/24/jquery_attr_prop/</link>
      <pubDate>Fri, 24 May 2013 01:11:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/05/24/jquery_attr_prop/</guid>
      <description>前几天，有人给 Multiple Select 插件 提了问题： setSelects doesn&amp;rsquo;t work in Firefox when using jquery 1.9.0 一直都在用 jQuery 1.8.3 的版本，没有尝试过 jQuery 1.9.0 的版本。 于是，开始调试代码，在 1.9.0 的版本中： 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>客户端数据存储之 Web Storage</title>
      <link>http://blog.wenzhixin.net.cn/2013/04/09/data_storage/</link>
      <pubDate>Tue, 09 Apr 2013 23:52:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/04/09/data_storage/</guid>
      <description>Web Storage Web Storage 有两种形式：localStorage (本地存储) 和 sessionStorage (会话存储)。 与 cookie 相似，都是使用键值对来对数据进行存储和读取。 这里对 cookie 与 Web Storage 进行</description>
    </item>
    
    <item>
      <title>制作在线聊天室</title>
      <link>http://blog.wenzhixin.net.cn/2013/04/02/node_chat/</link>
      <pubDate>Tue, 02 Apr 2013 20:41:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/04/02/node_chat/</guid>
      <description>先上效果图： 登录 聊天 主要接口： join：用户加入聊天室 users: 发送用户列表 message: 发送聊天信息 server 端主要代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22</description>
    </item>
    
    <item>
      <title>改善 JavaScript 的建议——语言基础</title>
      <link>http://blog.wenzhixin.net.cn/2013/03/27/javascript_base_advice/</link>
      <pubDate>Wed, 27 Mar 2013 19:46:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/03/27/javascript_base_advice/</guid>
      <description>1. 减少全局变量污染 建议：在应用程序中创建唯一一个全局变量，定义该变量为当前应用的容器 1 2 3 4 5 6 7 8 9 var My = {}; My.name = &amp;#39;wenzhixin&amp;#39;; My.work = { number: 123, list: [{ name: &amp;#39;web&amp;#39;, time: &amp;#39;2010.05.01&amp;#39; }]</description>
    </item>
    
    <item>
      <title>jQuery 如何获取 iframe 的内容</title>
      <link>http://blog.wenzhixin.net.cn/2013/03/01/access_iframe/</link>
      <pubDate>Fri, 01 Mar 2013 09:38:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/03/01/access_iframe/</guid>
      <description>现有 iframe，内容如下： 1 2 3 &amp;lt;iframe id=&amp;#34;iframeID&amp;#34; ...&amp;gt; &amp;lt;div id=&amp;#34;someID&amp;#34;&amp;gt;Hello world!&amp;lt;/div&amp;gt; &amp;lt;/iframe&amp;gt; 使用 jQuery 获取 div 的内容： 1 $(&amp;#39;#iframeID&amp;#39;).contents().find(&amp;#39;#someID&amp;#39;).html();</description>
    </item>
    
    <item>
      <title>JavaScript 语言基础知识点</title>
      <link>http://blog.wenzhixin.net.cn/2013/02/25/javascript_base/</link>
      <pubDate>Mon, 25 Feb 2013 01:11:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/02/25/javascript_base/</guid>
      <description>JavaScript 数据类型 JavaScript 变量 Javascript 运算符 JavaScript 流程控制 JavaScript 函数基础 JavaScript数组 JavaScript 字符串函数 JavaScript 正则表达式 Window对象 DOM 基本操作</description>
    </item>
    
    <item>
      <title>Java 获取当前路径</title>
      <link>http://blog.wenzhixin.net.cn/2013/02/21/java_get_cur_path/</link>
      <pubDate>Thu, 21 Feb 2013 23:32:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/02/21/java_get_cur_path/</guid>
      <description>1. 利用 System.getProperty( )函数获取当前路径： 1 System.out.println(System.getProperty(&amp;#34;user.dir&amp;#34</description>
    </item>
    
    <item>
      <title>IE 下 splice 的 bug</title>
      <link>http://blog.wenzhixin.net.cn/2013/01/16/splice_in_ie/</link>
      <pubDate>Wed, 16 Jan 2013 00:18:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/01/16/splice_in_ie/</guid>
      <description>引用： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 array.splice() in Internet Explorer I finally got around to investigating an IE bug I’ve been meaning to look into. The root cause was a difference between JScript and ECMAScript as regards array.splice(). The signature for this handy method that removes and inserts array elements in place: splice(start, deleteCount, value, ...)</description>
    </item>
    
    <item>
      <title>CSS 设置中英文混合字体</title>
      <link>http://blog.wenzhixin.net.cn/2013/01/14/css_font_setting/</link>
      <pubDate>Mon, 14 Jan 2013 11:20:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/01/14/css_font_setting/</guid>
      <description>统一设置网站的中英文混合字体： 由于英文字体 Arial 没有中文的，这样英文便显示为 Arial 字体，中文显示为 微软雅黑 字体。 1 2 3 body { font-family: Arial, &amp;#34;微软雅黑&amp;#</description>
    </item>
    
    <item>
      <title>设置存在特殊字符的 tooltip</title>
      <link>http://blog.wenzhixin.net.cn/2013/01/12/title_special_character/</link>
      <pubDate>Sat, 12 Jan 2013 10:21:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/01/12/title_special_character/</guid>
      <description>问题： 通过 $(&amp;lsquo;element&amp;rsquo;).html(html) 来生成页面元素时，假如 title 信息存在 &amp;lsquo; 或者 &amp;ldquo; 等特殊字符时便会出现显示错误的问题 解决： 1 2 3 4 5 6 7 8 9 function getHtml(html, title, el) { $div = $(&amp;#39;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;).html(html); if (el) { $div.find(el).attr(&amp;#39;title&amp;#39;, title); } else</description>
    </item>
    
    <item>
      <title>泰囧台词生成器（html5 版）</title>
      <link>http://blog.wenzhixin.net.cn/2013/01/10/fill_text/</link>
      <pubDate>Thu, 10 Jan 2013 20:23:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/01/10/fill_text/</guid>
      <description>最近经常看到别人 PS 来恶搞&amp;rdquo;泰囧&amp;rdquo;电影中的台词，觉得挺好玩的 先上效果图： 就想用 html5 自己也做一个来玩玩，查了下 API，发现</description>
    </item>
    
    <item>
      <title>使用 CSS3 制作自己的博客 Logo</title>
      <link>http://blog.wenzhixin.net.cn/2012/12/07/css3_blog_logo/</link>
      <pubDate>Fri, 07 Dec 2012 23:01:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/12/07/css3_blog_logo/</guid>
      <description>1、html 代码 1 2 3 4 5 6 7 8 9 10 11 12 &amp;lt;div class=&amp;#34;wenyi-logo&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;border&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;circle&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;wy&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;wen&amp;#34;&amp;gt;文&amp;lt;/div&amp;gt; &amp;lt;div clas</description>
    </item>
    
    <item>
      <title>使用 CSS3 制作自己的博客 Logo</title>
      <link>http://blog.wenzhixin.net.cn/2012/12/07/css3_blog_logo/</link>
      <pubDate>Fri, 07 Dec 2012 23:01:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/12/07/css3_blog_logo/</guid>
      <description>1、html 代码 1 2 3 4 5 6 7 8 9 10 11 12 &amp;lt;div class=&amp;#34;wenyi-logo&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;border&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;circle&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;wy&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;wen&amp;#34;&amp;gt;文&amp;lt;/div&amp;gt; &amp;lt;div clas</description>
    </item>
    
    <item>
      <title>IE 下使用 button 时 Enter 的问题</title>
      <link>http://blog.wenzhixin.net.cn/2012/12/03/ie_enter_button_bug/</link>
      <pubDate>Mon, 03 Dec 2012 20:21:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/12/03/ie_enter_button_bug/</guid>
      <description>问题： 当页面中有 1 &amp;lt;button&amp;gt;&amp;lt;/button&amp;gt; 的时候，IE 浏览器按 Enter 便会触发 button 按钮的点击事件，导致不必要的麻烦出现（例如对 input 的检查）。 解决： 使用 1 &amp;lt;a class=&amp;#34;button&amp;#34; href=&amp;#34;javascript:void(0)&amp;#34;&amp;gt;&amp;lt;/a&amp;gt; 来代替，并设置</description>
    </item>
    
    <item>
      <title>IE 下使用 button 时 Enter 的问题</title>
      <link>http://blog.wenzhixin.net.cn/2012/12/03/ie_enter_button_bug/</link>
      <pubDate>Mon, 03 Dec 2012 20:21:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/12/03/ie_enter_button_bug/</guid>
      <description>问题： 当页面中有 1 &amp;lt;button&amp;gt;&amp;lt;/button&amp;gt; 的时候，IE 浏览器按 Enter 便会触发 button 按钮的点击事件，导致不必要的麻烦出现（例如对 input 的检查）。 解决： 使用 1 &amp;lt;a class=&amp;#34;button&amp;#34; href=&amp;#34;javascript:void(0)&amp;#34;&amp;gt;&amp;lt;/a&amp;gt; 来代替，并设置</description>
    </item>
    
    <item>
      <title>图片查看弹出框 (jQuery 插件)</title>
      <link>http://blog.wenzhixin.net.cn/2012/12/02/jquery_imagebox/</link>
      <pubDate>Sun, 02 Dec 2012 21:11:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/12/02/jquery_imagebox/</guid>
      <description>参数 linkTitle: 点击图片提示信息，默认为 &amp;lsquo;点击查看原图&amp;rsquo; direction: 箭头显示方向，水平方向 (horizontal) 和垂直方向 (vertical)，默认为 &amp;lsquo;horizontal&amp;rsquo; 如何</description>
    </item>
    
    <item>
      <title>图片查看弹出框 (jQuery 插件)</title>
      <link>http://blog.wenzhixin.net.cn/2012/12/02/jquery_imagebox/</link>
      <pubDate>Sun, 02 Dec 2012 21:11:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/12/02/jquery_imagebox/</guid>
      <description>参数 linkTitle: 点击图片提示信息，默认为 &amp;lsquo;点击查看原图&amp;rsquo; direction: 箭头显示方向，水平方向 (horizontal) 和垂直方向 (vertical)，默认为 &amp;lsquo;horizontal&amp;rsquo; 如何</description>
    </item>
    
    <item>
      <title>Javascript 编码约定</title>
      <link>http://blog.wenzhixin.net.cn/2012/12/01/javascript_coding_convention/</link>
      <pubDate>Sat, 01 Dec 2012 02:31:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/12/01/javascript_coding_convention/</guid>
      <description>1、使用 strict 模式 在一个作用域(包括函数作用域、全局作用域)中，可以使用 1 &amp;#34;use strict&amp;#34;; 来开启 strict 模式。 2、缩进 用 Tab 键进行代码缩进，以节约代码大小，使用4个</description>
    </item>
    
    <item>
      <title>Javascript 编码约定</title>
      <link>http://blog.wenzhixin.net.cn/2012/12/01/javascript_coding_convention/</link>
      <pubDate>Sat, 01 Dec 2012 02:31:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/12/01/javascript_coding_convention/</guid>
      <description>1、使用 strict 模式 在一个作用域(包括函数作用域、全局作用域)中，可以使用 1 &amp;#34;use strict&amp;#34;; 来开启 strict 模式。 2、缩进 用 Tab 键进行代码缩进，以节约代码大小，使用4个</description>
    </item>
    
    <item>
      <title>快速搭建自己的博客(markdown)</title>
      <link>http://blog.wenzhixin.net.cn/2012/11/30/build_markdown_blog/</link>
      <pubDate>Fri, 30 Nov 2012 01:54:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/11/30/build_markdown_blog/</guid>
      <description>PS：基于 jQuery、markdown 的 html 博客，无涉及后台，如此简单，你也可以拥有!!! 目录结构 1 2 3 4 5 6 7 8 9 10 ├── js | ├── jquery-1.8.3.min.js | ├</description>
    </item>
    
    <item>
      <title>快速搭建自己的博客(markdown)</title>
      <link>http://blog.wenzhixin.net.cn/2012/11/30/build_markdown_blog/</link>
      <pubDate>Fri, 30 Nov 2012 01:54:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/11/30/build_markdown_blog/</guid>
      <description>PS：基于 jQuery、markdown 的 html 博客，无涉及后台，如此简单，你也可以拥有!!! 目录结构 1 2 3 4 5 6 7 8 9 10 ├── js | ├── jquery-1.8.3.min.js | ├</description>
    </item>
    
    <item>
      <title>Nodejs 应用部署小记</title>
      <link>http://blog.wenzhixin.net.cn/2012/11/09/nodejs_deploy/</link>
      <pubDate>Fri, 09 Nov 2012 00:05:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/11/09/nodejs_deploy/</guid>
      <description>1、日志功能 1) 加入 access.log 1 2 3 4 5 var accessLogfile = fs.createWriteStream(&amp;#39;access.log&amp;#39;, {flags: &amp;#39;a&amp;#39;}); app.configure(function() { app.use(express.logger({stream: accessLogfile})); } 2) 加入 error.log 首先，添加 helpers/error.js 文件： 1 2 3 4 5 6 7 8 9 10 11 12 var fs = require(&amp;#39;fs&amp;#39;); var errorLogfile = fs.createWriteStream(&amp;#39;logs/error.log&amp;#39;, {flags: &amp;#39;a&amp;#39;}); exports.handler = function(err, req, res, status) { console.log(err); var</description>
    </item>
    
    <item>
      <title>Nodejs 应用部署小记</title>
      <link>http://blog.wenzhixin.net.cn/2012/11/09/nodejs_deploy/</link>
      <pubDate>Fri, 09 Nov 2012 00:05:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/11/09/nodejs_deploy/</guid>
      <description>1、日志功能 1) 加入 access.log 1 2 3 4 5 var accessLogfile = fs.createWriteStream(&amp;#39;access.log&amp;#39;, {flags: &amp;#39;a&amp;#39;}); app.configure(function() { app.use(express.logger({stream: accessLogfile})); } 2) 加入 error.log 首先，添加 helpers/error.js 文件： 1 2 3 4 5 6 7 8 9 10 11 12 var fs = require(&amp;#39;fs&amp;#39;); var errorLogfile = fs.createWriteStream(&amp;#39;logs/error.log&amp;#39;, {flags: &amp;#39;a&amp;#39;}); exports.handler = function(err, req, res, status) { console.log(err); var</description>
    </item>
    
    <item>
      <title>Ubuntu 开发 Nodejs 入门小记</title>
      <link>http://blog.wenzhixin.net.cn/2012/10/25/nodejs_get_started/</link>
      <pubDate>Thu, 25 Oct 2012 22:40:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/10/25/nodejs_get_started/</guid>
      <description>Nodejs 之搭建环境 1) 安装 nodejs、npm 1 2 3 4 sudo apt-get install python-software-properties sudo add-apt-repository ppa:chris-lea/node.js sudo apt-get update sudo apt-get install nodejs npm 2) 安装 express​ - web application framework for node 1 sudo npm install -g express 3) 安装 supervisor - is used to restart</description>
    </item>
    
    <item>
      <title>Ubuntu 开发 Nodejs 入门小记</title>
      <link>http://blog.wenzhixin.net.cn/2012/10/25/nodejs_get_started/</link>
      <pubDate>Thu, 25 Oct 2012 22:40:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/10/25/nodejs_get_started/</guid>
      <description>Nodejs 之搭建环境 1) 安装 nodejs、npm 1 2 3 4 sudo apt-get install python-software-properties sudo add-apt-repository ppa:chris-lea/node.js sudo apt-get update sudo apt-get install nodejs npm 2) 安装 express​ - web application framework for node 1 sudo npm install -g express 3) 安装 supervisor - is used to restart</description>
    </item>
    
    <item>
      <title>Ubuntu 搭建 Ruby on Rails 开发环境</title>
      <link>http://blog.wenzhixin.net.cn/2012/10/22/ubuntu_ruby_on_rails_development_environment_set_up/</link>
      <pubDate>Mon, 22 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/10/22/ubuntu_ruby_on_rails_development_environment_set_up/</guid>
      <description>安装 ruby： 1 sudo apt-get install ruby1.9.1 ruby1.9.1-dev 安装 rubygems： 1 sudo apt-get install rubygems 安装 mysql 1 sudo apt-get install mysql 安装 ruby-mysql 1）下载：http://www.tmtm.org/en/ru</description>
    </item>
    
    <item>
      <title>Ubuntu 搭建 Ruby on Rails 开发环境</title>
      <link>http://blog.wenzhixin.net.cn/2012/10/22/ubuntu_ruby_on_rails_development_environment_set_up/</link>
      <pubDate>Mon, 22 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/10/22/ubuntu_ruby_on_rails_development_environment_set_up/</guid>
      <description>安装 ruby： 1 sudo apt-get install ruby1.9.1 ruby1.9.1-dev 安装 rubygems： 1 sudo apt-get install rubygems 安装 mysql 1 sudo apt-get install mysql 安装 ruby-mysql 1）下载：http://www.tmtm.org/en/ru</description>
    </item>
    
    <item>
      <title>Twitter Bootstrap 资源汇总</title>
      <link>http://blog.wenzhixin.net.cn/2012/09/18/twitter_bootstrap_resources_aggregation/</link>
      <pubDate>Tue, 18 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/09/18/twitter_bootstrap_resources_aggregation/</guid>
      <description>1、Twitter Bootstrap 2、Bootstrap 插件 日期选择器：Datepicker for Bootstrap​ 颜色选择器：Colorpicker for Bo</description>
    </item>
    
    <item>
      <title>Twitter Bootstrap 资源汇总</title>
      <link>http://blog.wenzhixin.net.cn/2012/09/18/twitter_bootstrap_resources_aggregation/</link>
      <pubDate>Tue, 18 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/09/18/twitter_bootstrap_resources_aggregation/</guid>
      <description>1、Twitter Bootstrap 2、Bootstrap 插件 日期选择器：Datepicker for Bootstrap​ 颜色选择器：Colorpicker for Bo</description>
    </item>
    
    <item>
      <title>jQuery 插件使用小记（使用、问题、解决）</title>
      <link>http://blog.wenzhixin.net.cn/2012/09/16/using_jquery_plugin/</link>
      <pubDate>Sun, 16 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/09/16/using_jquery_plugin/</guid>
      <description>1、bootstrap.js (v2.1.0) 问题： bootstrap dropdown 菜单使用 on 或者 live 无效 解决： 注释 .on(&amp;lsquo;click.dropdown touchstart.dropdown.data-api&amp;rsquo;, &amp;lsquo;.dropdown&amp;rsquo;, function (e) { e.stopPropagation() }) (第 720 行) 2、&amp;hellip;</description>
    </item>
    
    <item>
      <title>jQuery 插件使用小记（使用、问题、解决）</title>
      <link>http://blog.wenzhixin.net.cn/2012/09/16/using_jquery_plugin/</link>
      <pubDate>Sun, 16 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/09/16/using_jquery_plugin/</guid>
      <description>1、bootstrap.js (v2.1.0) 问题： bootstrap dropdown 菜单使用 on 或者 live 无效 解决： 注释 .on(&amp;lsquo;click.dropdown touchstart.dropdown.data-api&amp;rsquo;, &amp;lsquo;.dropdown&amp;rsquo;, function (e) { e.stopPropagation() }) (第 720 行) 2、&amp;hellip;</description>
    </item>
    
    <item>
      <title>使用 nginx 作为代理服务器轻松解决 Ajax 跨域问题</title>
      <link>http://blog.wenzhixin.net.cn/2012/08/01/the_use_of_nginx_as_a_proxy_server_easily_solve_the_cross_domain_ajax_problem/</link>
      <pubDate>Wed, 01 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/08/01/the_use_of_nginx_as_a_proxy_server_easily_solve_the_cross_domain_ajax_problem/</guid>
      <description>1、安装 nginx： 1 sudo apt-get install nginx 2、配置 nginx： 1 sudo vi /etc/nginx/sites-enabled/default 输入内容： 1 2 3 4 5 6 7 8 server { listen 8080; location /api { proxy_pass http://myserver/api; access_log off; } } 3、重启 1 sudo /etc/init.d/nginx restart 4、使用： 1 var</description>
    </item>
    
    <item>
      <title>使用 nginx 作为代理服务器轻松解决 Ajax 跨域问题</title>
      <link>http://blog.wenzhixin.net.cn/2012/08/01/the_use_of_nginx_as_a_proxy_server_easily_solve_the_cross_domain_ajax_problem/</link>
      <pubDate>Wed, 01 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/08/01/the_use_of_nginx_as_a_proxy_server_easily_solve_the_cross_domain_ajax_problem/</guid>
      <description>1、安装 nginx： 1 sudo apt-get install nginx 2、配置 nginx： 1 sudo vi /etc/nginx/sites-enabled/default 输入内容： 1 2 3 4 5 6 7 8 server { listen 8080; location /api { proxy_pass http://myserver/api; access_log off; } } 3、重启 1 sudo /etc/init.d/nginx restart 4、使用： 1 var</description>
    </item>
    
    <item>
      <title>html5 canvas 画图实例——rotate</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/20/html5_canvas_drawing_examples_rotate/</link>
      <pubDate>Sun, 20 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/20/html5_canvas_drawing_examples_rotate/</guid>
      <description>接口：context.rotate(angle) 功能：按给定的弧度旋转,按顺时针旋转。 说明：rotate 方法旋转的中心始终是canvas 的原</description>
    </item>
    
    <item>
      <title>html5 canvas 画图实例——rotate</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/20/html5_canvas_drawing_examples_rotate/</link>
      <pubDate>Sun, 20 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/20/html5_canvas_drawing_examples_rotate/</guid>
      <description>接口：context.rotate(angle) 功能：按给定的弧度旋转,按顺时针旋转。 说明：rotate 方法旋转的中心始终是canvas 的原</description>
    </item>
    
    <item>
      <title>Eclipse 安装插件(aptana、svn 、git、Java EE、JSHint)</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/08/eclipse_install_the_plugin_aptana_svn_git_java_ee_jshint/</link>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/08/eclipse_install_the_plugin_aptana_svn_git_java_ee_jshint/</guid>
      <description>1、安装 aptana 插件： * 依次点击：Help -&amp;gt; Install New Software&amp;hellip; -&amp;gt; Add * 输入：http://download.aptana.com/studio3/plugin/</description>
    </item>
    
    <item>
      <title>Eclipse 安装插件(aptana、svn 、git、Java EE、JSHint)</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/08/eclipse_install_the_plugin_aptana_svn_git_java_ee_jshint/</link>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/08/eclipse_install_the_plugin_aptana_svn_git_java_ee_jshint/</guid>
      <description>1、安装 aptana 插件： * 依次点击：Help -&amp;gt; Install New Software&amp;hellip; -&amp;gt; Add * 输入：http://download.aptana.com/studio3/plugin/</description>
    </item>
    
    <item>
      <title>div 中无法自动换行、以及单行显示的问题</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/08/word_wrap_and_one_cannot_display_the_problems_in_div/</link>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/08/word_wrap_and_one_cannot_display_the_problems_in_div/</guid>
      <description>1、无法自动换行 * 问题：如果 div 输入的是英文字母且没有空格，会导致英文字母不换行直接在同一行输出，导致 div 的宽度远远超出设定的大小。 * 原因：因为</description>
    </item>
    
    <item>
      <title>div 中无法自动换行、以及单行显示的问题</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/08/word_wrap_and_one_cannot_display_the_problems_in_div/</link>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/08/word_wrap_and_one_cannot_display_the_problems_in_div/</guid>
      <description>1、无法自动换行 * 问题：如果 div 输入的是英文字母且没有空格，会导致英文字母不换行直接在同一行输出，导致 div 的宽度远远超出设定的大小。 * 原因：因为</description>
    </item>
    
    <item>
      <title>彻底研究 CSS ——段落的垂直对齐</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/06/the_vertical_alignment_of_css_complete_paragraph/</link>
      <pubDate>Sun, 06 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/06/the_vertical_alignment_of_css_complete_paragraph/</guid>
      <description>如果文字内容只有一行，可以设置 line-height 与height 相同来使文字垂直居中。 * css 代码： 1 2 3 4 5 6 7 8 .one_line { width: 500px; height: 100px; line-height: 100px; background-color: #9bd; margin: 20px; padding: 20px; } * html 代码： 1 2 3</description>
    </item>
    
    <item>
      <title>彻底研究 CSS ——段落的垂直对齐</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/06/the_vertical_alignment_of_css_complete_paragraph/</link>
      <pubDate>Sun, 06 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/06/the_vertical_alignment_of_css_complete_paragraph/</guid>
      <description>如果文字内容只有一行，可以设置 line-height 与height 相同来使文字垂直居中。 * css 代码： 1 2 3 4 5 6 7 8 .one_line { width: 500px; height: 100px; line-height: 100px; background-color: #9bd; margin: 20px; padding: 20px; } * html 代码： 1 2 3</description>
    </item>
    
    <item>
      <title>彻底研究 CSS——文字与图像</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/05/a_thorough_study_of_css_text_and_image/</link>
      <pubDate>Sat, 05 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/05/a_thorough_study_of_css_text_and_image/</guid>
      <description>1、CSS 文字样式 * font-family：用于设置字体。同时声明多种字体时，字体之间用逗号分隔开，字体名称有空格需要用双引号引起来。 * fo</description>
    </item>
    
    <item>
      <title>彻底研究 CSS——文字与图像</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/05/a_thorough_study_of_css_text_and_image/</link>
      <pubDate>Sat, 05 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/05/a_thorough_study_of_css_text_and_image/</guid>
      <description>1、CSS 文字样式 * font-family：用于设置字体。同时声明多种字体时，字体之间用逗号分隔开，字体名称有空格需要用双引号引起来。 * fo</description>
    </item>
    
    <item>
      <title>彻底研究 CSS—— CSS 核心基础</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_css_core_base/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_css_core_base/</guid>
      <description>1、HTML 书写规范 * 标记名称必须小写 * 属性名必须小写 * 标记必须严格嵌套 * 标记必须封闭，即使是空元素 * 属性值用双引号括起来，并且使用完整形式</description>
    </item>
    
    <item>
      <title>彻底研究 CSS—— CSS 核心基础</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_css_core_base/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_css_core_base/</guid>
      <description>1、HTML 书写规范 * 标记名称必须小写 * 属性名必须小写 * 标记必须严格嵌套 * 标记必须封闭，即使是空元素 * 属性值用双引号括起来，并且使用完整形式</description>
    </item>
    
    <item>
      <title>彻底研究CSS——深入理解盒子模型</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_understanding_the_box_model/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_understanding_the_box_model/</guid>
      <description>1、盒子模型的内部结构 * 在 CSS 中，一个独立的盒子模型由 content（内容）、border（边框）、padding（内边距）和 margin（外</description>
    </item>
    
    <item>
      <title>彻底研究CSS——深入理解盒子模型</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_understanding_the_box_model/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_understanding_the_box_model/</guid>
      <description>1、盒子模型的内部结构 * 在 CSS 中，一个独立的盒子模型由 content（内容）、border（边框）、padding（内边距）和 margin（外</description>
    </item>
    
    <item>
      <title>彻底研究CSS——盒子的浮动和定位</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_floating_and_positioning_the_box/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_floating_and_positioning_the_box/</guid>
      <description>1、盒子的浮动 * CSS 中有一个 float 属性，默认为 none，即标准流。通过设置 float 属性的值为 left 或 right，元素会向其父元素的左侧或右侧靠近，盒子的宽度</description>
    </item>
    
    <item>
      <title>彻底研究CSS——盒子的浮动和定位</title>
      <link>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_floating_and_positioning_the_box/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/05/04/a_thorough_study_of_css_floating_and_positioning_the_box/</guid>
      <description>1、盒子的浮动 * CSS 中有一个 float 属性，默认为 none，即标准流。通过设置 float 属性的值为 left 或 right，元素会向其父元素的左侧或右侧靠近，盒子的宽度</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——引用类型（Object、Array、String、Date）</title>
      <link>http://blog.wenzhixin.net.cn/2012/04/05/javascript_advanced_programming_reference_types_object_array_string_date/</link>
      <pubDate>Thu, 05 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/04/05/javascript_advanced_programming_reference_types_object_array_string_date/</guid>
      <description>一、Object 类型 1、创建 Object 实例的方法：使用 new 操作符接构造函数方法 和 使用对象字面量表示法。 1 2 3 4 var obj = new Object(); obj.name1 = value1; obj.name2 = value2; ... 1 2 3 4 5 var obj =</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——引用类型（Object、Array、String、Date）</title>
      <link>http://blog.wenzhixin.net.cn/2012/04/05/javascript_advanced_programming_reference_types_object_array_string_date/</link>
      <pubDate>Thu, 05 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/04/05/javascript_advanced_programming_reference_types_object_array_string_date/</guid>
      <description>一、Object 类型 1、创建 Object 实例的方法：使用 new 操作符接构造函数方法 和 使用对象字面量表示法。 1 2 3 4 var obj = new Object(); obj.name1 = value1; obj.name2 = value2; ... 1 2 3 4 5 var obj =</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——引用类型（RegExp、Function、Global）</title>
      <link>http://blog.wenzhixin.net.cn/2012/04/05/javascript_advanced_programming_reference_types_regexp_function_global/</link>
      <pubDate>Thu, 05 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/04/05/javascript_advanced_programming_reference_types_regexp_function_global/</guid>
      <description>一、RegExp 类型 1、创建一个正则表达式 （1）语法： 1 2 var expression = / pattern / flags; var expression = new RegExp(pattern, flags); （2）模式（pattern）部分可以是任何简单或者复杂的</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——引用类型（RegExp、Function、Global）</title>
      <link>http://blog.wenzhixin.net.cn/2012/04/05/javascript_advanced_programming_reference_types_regexp_function_global/</link>
      <pubDate>Thu, 05 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/04/05/javascript_advanced_programming_reference_types_regexp_function_global/</guid>
      <description>一、RegExp 类型 1、创建一个正则表达式 （1）语法： 1 2 var expression = / pattern / flags; var expression = new RegExp(pattern, flags); （2）模式（pattern）部分可以是任何简单或者复杂的</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——继承</title>
      <link>http://blog.wenzhixin.net.cn/2012/04/04/javascript_advanced_programming_inheritance/</link>
      <pubDate>Wed, 04 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/04/04/javascript_advanced_programming_inheritance/</guid>
      <description>1、JavaScript 中实现继承主要是依靠原型链来实现的。基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。 2、实现继承模式</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——继承</title>
      <link>http://blog.wenzhixin.net.cn/2012/04/04/javascript_advanced_programming_inheritance/</link>
      <pubDate>Wed, 04 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/04/04/javascript_advanced_programming_inheritance/</guid>
      <description>1、JavaScript 中实现继承主要是依靠原型链来实现的。基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。 2、实现继承模式</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——面向对象</title>
      <link>http://blog.wenzhixin.net.cn/2012/04/03/javascript_advanced_programming_object_oriented/</link>
      <pubDate>Tue, 03 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/04/03/javascript_advanced_programming_object_oriented/</guid>
      <description>1、JavaScript 把的对象定义成散列表：无序属性的集合，其属性可以包含基本值、对象或者函数。 2、创建对象模式 （1）最简单的方式：创建一</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——面向对象</title>
      <link>http://blog.wenzhixin.net.cn/2012/04/03/javascript_advanced_programming_object_oriented/</link>
      <pubDate>Tue, 03 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/04/03/javascript_advanced_programming_object_oriented/</guid>
      <description>1、JavaScript 把的对象定义成散列表：无序属性的集合，其属性可以包含基本值、对象或者函数。 2、创建对象模式 （1）最简单的方式：创建一</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——变量、作用域和垃圾回收</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/24/javascript_advanced_programming_variables_scope_and_garbage_collection/</link>
      <pubDate>Sat, 24 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/24/javascript_advanced_programming_variables_scope_and_garbage_collection/</guid>
      <description>1、变量包含两种不同类型的值：基本类型值和引用类型值。基本类型值是指保存在栈内存中的简单数据段，即完全保存在内存中的一个位置。引用类型值是指</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——变量、作用域和垃圾回收</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/24/javascript_advanced_programming_variables_scope_and_garbage_collection/</link>
      <pubDate>Sat, 24 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/24/javascript_advanced_programming_variables_scope_and_garbage_collection/</guid>
      <description>1、变量包含两种不同类型的值：基本类型值和引用类型值。基本类型值是指保存在栈内存中的简单数据段，即完全保存在内存中的一个位置。引用类型值是指</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——数据类型</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/19/javascript_advanced_programming_data_types/</link>
      <pubDate>Mon, 19 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/19/javascript_advanced_programming_data_types/</guid>
      <description>1、JavaScript 中有 5 种简单数据类型（基本数据类型）：Undefined、Null、Boolean、Number 和 String；1 种</description>
    </item>
    
    <item>
      <title>JavaScript 高级程序设计——数据类型</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/19/javascript_advanced_programming_data_types/</link>
      <pubDate>Mon, 19 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/19/javascript_advanced_programming_data_types/</guid>
      <description>1、JavaScript 中有 5 种简单数据类型（基本数据类型）：Undefined、Null、Boolean、Number 和 String；1 种</description>
    </item>
    
    <item>
      <title>编写高质量代码——高质量JavaScript</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/18/write_high_quality_code_high_quality_javascript/</link>
      <pubDate>Sun, 18 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/18/write_high_quality_code_high_quality_javascript/</guid>
      <description>1、团队合作，如何避免 JavaScript 冲突？ 为了让 JavaScript 不产生冲突，需要避免全局变量的泛滥，合理使用命名空间以及为代码添加必要的注释。 （1）避免全局变量的泛滥</description>
    </item>
    
    <item>
      <title>编写高质量代码——高质量JavaScript</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/18/write_high_quality_code_high_quality_javascript/</link>
      <pubDate>Sun, 18 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/18/write_high_quality_code_high_quality_javascript/</guid>
      <description>1、团队合作，如何避免 JavaScript 冲突？ 为了让 JavaScript 不产生冲突，需要避免全局变量的泛滥，合理使用命名空间以及为代码添加必要的注释。 （1）避免全局变量的泛滥</description>
    </item>
    
    <item>
      <title>编写高质量代码——高质量的CSS</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/17/write_high_quality_code_high_quality_css/</link>
      <pubDate>Sat, 17 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/17/write_high_quality_code_high_quality_css/</guid>
      <description>1、解析网页模式和DTD （1）解析网页模式主要有标准模式和怪异模式。怪异模式是为了兼容老式浏览器下的代码，应该避免触发怪异模式，选用标准模式</description>
    </item>
    
    <item>
      <title>编写高质量代码——高质量的CSS</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/17/write_high_quality_code_high_quality_css/</link>
      <pubDate>Sat, 17 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/17/write_high_quality_code_high_quality_css/</guid>
      <description>1、解析网页模式和DTD （1）解析网页模式主要有标准模式和怪异模式。怪异模式是为了兼容老式浏览器下的代码，应该避免触发怪异模式，选用标准模式</description>
    </item>
    
    <item>
      <title>JavaScript高级程序设计——在 HTML 中使用 JavaScript</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/16/javascript_programming_using_javascript_in_html/</link>
      <pubDate>Fri, 16 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/16/javascript_programming_using_javascript_in_html/</guid>
      <description>1、在 HTML 页面中使用 JavaScript的主要方法：使用 script 元素 1 &amp;lt;script type=&amp;#34;text/javascript&amp;#34; scr=&amp;#34;src.js&amp;#34; charset=&amp;#34;charset&amp;#34; defer=&amp;#34;defer&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; • type：用于表示编写代码使用的脚本语言，一般都是 text/javascript • src：表示</description>
    </item>
    
    <item>
      <title>JavaScript高级程序设计——在 HTML 中使用 JavaScript</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/16/javascript_programming_using_javascript_in_html/</link>
      <pubDate>Fri, 16 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/16/javascript_programming_using_javascript_in_html/</guid>
      <description>1、在 HTML 页面中使用 JavaScript的主要方法：使用 script 元素 1 &amp;lt;script type=&amp;#34;text/javascript&amp;#34; scr=&amp;#34;src.js&amp;#34; charset=&amp;#34;charset&amp;#34; defer=&amp;#34;defer&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; • type：用于表示编写代码使用的脚本语言，一般都是 text/javascript • src：表示</description>
    </item>
    
    <item>
      <title>编写高质量代码——Web前端开发修炼之道</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/15/write_high_quality_code_web_front_end_development_practice_of_the_road/</link>
      <pubDate>Thu, 15 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/15/write_high_quality_code_web_front_end_development_practice_of_the_road/</guid>
      <description>• Web 标准 Web 标准由一系列标准组合而成，其核心理念是将网页的结构、样式和行为分离开来，主要分为：结构标准、样式标准和行为标准。结构标准包括 XML 标准</description>
    </item>
    
    <item>
      <title>编写高质量代码——Web前端开发修炼之道</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/15/write_high_quality_code_web_front_end_development_practice_of_the_road/</link>
      <pubDate>Thu, 15 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/15/write_high_quality_code_web_front_end_development_practice_of_the_road/</guid>
      <description>• Web 标准 Web 标准由一系列标准组合而成，其核心理念是将网页的结构、样式和行为分离开来，主要分为：结构标准、样式标准和行为标准。结构标准包括 XML 标准</description>
    </item>
    
    <item>
      <title>编写高质量代码——高质量的HTML</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/15/write_high_quality_code_high_quality_html/</link>
      <pubDate>Thu, 15 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/15/write_high_quality_code_high_quality_html/</guid>
      <description>1、使用语义化标签 • div-division：分隔 • span：范围 • ol-ordered list：排序列表 • ul-unordered list：不排序列表 • li-list item：列表项目 • dl-definition l</description>
    </item>
    
    <item>
      <title>编写高质量代码——高质量的HTML</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/15/write_high_quality_code_high_quality_html/</link>
      <pubDate>Thu, 15 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/15/write_high_quality_code_high_quality_html/</guid>
      <description>1、使用语义化标签 • div-division：分隔 • span：范围 • ol-ordered list：排序列表 • ul-unordered list：不排序列表 • li-list item：列表项目 • dl-definition l</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery插件</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/14/sharp_jquery_study_notes_jquery_plugin/</link>
      <pubDate>Wed, 14 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/14/sharp_jquery_study_notes_jquery_plugin/</guid>
      <description>​1. 插件的种类 (1)封装对象方法的插件：将对象方法封装起来，用于对通过选择器获取的 jQuery 对象进行操作 (2)封装全局函数的插件：将独立的函数加到</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery插件</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/14/sharp_jquery_study_notes_jquery_plugin/</link>
      <pubDate>Wed, 14 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/14/sharp_jquery_study_notes_jquery_plugin/</guid>
      <description>​1. 插件的种类 (1)封装对象方法的插件：将对象方法封装起来，用于对通过选择器获取的 jQuery 对象进行操作 (2)封装全局函数的插件：将独立的函数加到</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery与Ajax应用</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/13/sharp_jquery_study_notes_jquery_and_ajax_application/</link>
      <pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/13/sharp_jquery_study_notes_jquery_and_ajax_application/</guid>
      <description>​1. 什么是 Ajax？ • Ajax 全称为”Asynchronous Javascript and XML”（异步 Javascript 和 XML），并不是指一种单一的技术，而是有机地利用了一系列交互</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery与Ajax应用</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/13/sharp_jquery_study_notes_jquery_and_ajax_application/</link>
      <pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/13/sharp_jquery_study_notes_jquery_and_ajax_application/</guid>
      <description>​1. 什么是 Ajax？ • Ajax 全称为”Asynchronous Javascript and XML”（异步 Javascript 和 XML），并不是指一种单一的技术，而是有机地利用了一系列交互</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery中的动画</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/13/sharp_jquery_study_notes_jquery_in_animation/</link>
      <pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/13/sharp_jquery_study_notes_jquery_in_animation/</guid>
      <description>​1. show和hide方法 • (&amp;ldquo;element&amp;rdquo;).show(speed[, callback])-显示element元素 • (&amp;ldquo;element&amp;rdquo;).hide(speed[, callback])-隐藏element元素 (1)show() 和 hide() 方法同时修</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery中的动画</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/13/sharp_jquery_study_notes_jquery_in_animation/</link>
      <pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/13/sharp_jquery_study_notes_jquery_in_animation/</guid>
      <description>​1. show和hide方法 • (&amp;ldquo;element&amp;rdquo;).show(speed[, callback])-显示element元素 • (&amp;ldquo;element&amp;rdquo;).hide(speed[, callback])-隐藏element元素 (1)show() 和 hide() 方法同时修</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery中的DOM操作</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/12/sharp_jquery_study_notes_dom_operation_in_jquery/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/12/sharp_jquery_study_notes_dom_operation_in_jquery/</guid>
      <description>​1. 什么是DOM？ • DOM 是 Document Object Model 的缩写，是指文档对象模型 ​2. DOM操作的分类 (1)DOM Core-可用来处理任何一种使用标记语言的文档 • getElementById() • getElementByTagName() • getAttribute() •</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery中的DOM操作</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/12/sharp_jquery_study_notes_dom_operation_in_jquery/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/12/sharp_jquery_study_notes_dom_operation_in_jquery/</guid>
      <description>​1. 什么是DOM？ • DOM 是 Document Object Model 的缩写，是指文档对象模型 ​2. DOM操作的分类 (1)DOM Core-可用来处理任何一种使用标记语言的文档 • getElementById() • getElementByTagName() • getAttribute() •</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery中的事件</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/12/sharp_jquery_study_notes_events_in_jquery/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/12/sharp_jquery_study_notes_events_in_jquery/</guid>
      <description>​1. 加载 DOM 1 2 3 $(document).ready(function() { //代码 }); (1)执行时机：window.onload 方法在网页中所有的元素（包括愿你苏的所有关联文件）完全加载后才执行</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery中的事件</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/12/sharp_jquery_study_notes_events_in_jquery/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/12/sharp_jquery_study_notes_events_in_jquery/</guid>
      <description>​1. 加载 DOM 1 2 3 $(document).ready(function() { //代码 }); (1)执行时机：window.onload 方法在网页中所有的元素（包括愿你苏的所有关联文件）完全加载后才执行</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery选择器</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/11/sharp_jquery_study_notes_jquery_selector/</link>
      <pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/11/sharp_jquery_study_notes_jquery_selector/</guid>
      <description>1. CSS选择器 (1)标签选择器-以文档元素作为选择符 • E { CSS规则 } (2)ID选择器-以文档元素的唯一标识符 ID 作为选择符 • #ID { CSS规则 }</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——jQuery选择器</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/11/sharp_jquery_study_notes_jquery_selector/</link>
      <pubDate>Sun, 11 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/11/sharp_jquery_study_notes_jquery_selector/</guid>
      <description>1. CSS选择器 (1)标签选择器-以文档元素作为选择符 • E { CSS规则 } (2)ID选择器-以文档元素的唯一标识符 ID 作为选择符 • #ID { CSS规则 }</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——认识jQuery</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/10/sharp_jquery_study_notes_understanding_of_jquery/</link>
      <pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/10/sharp_jquery_study_notes_understanding_of_jquery/</guid>
      <description>认识jQuery ​1. JavaScript中比较流行的JavaScript库：Prototype、Dojo、YUI、Ext JS、MooToo</description>
    </item>
    
    <item>
      <title>《锋利的jQuery》学习笔记——认识jQuery</title>
      <link>http://blog.wenzhixin.net.cn/2012/03/10/sharp_jquery_study_notes_understanding_of_jquery/</link>
      <pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2012/03/10/sharp_jquery_study_notes_understanding_of_jquery/</guid>
      <description>认识jQuery ​1. JavaScript中比较流行的JavaScript库：Prototype、Dojo、YUI、Ext JS、MooToo</description>
    </item>
    
  </channel>
</rss>
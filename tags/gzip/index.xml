<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gzip on 文翼的博客</title>
    <link>http://blog.wenzhixin.net.cn/tags/gzip/</link>
    <description>Recent content in Gzip on 文翼的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>wenzhixin.net.cn 粤ICP备15117953号</copyright>
    <lastBuildDate>Sun, 10 Nov 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://blog.wenzhixin.net.cn/tags/gzip/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>为你的网站开启 gzip 压缩功能（nodejs、nginx）</title>
      <link>http://blog.wenzhixin.net.cn/2013/11/10/server_gzip_on</link>
      <pubDate>Sun, 10 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/2013/11/10/server_gzip_on</guid>
      <description>

&lt;p&gt;开启网站的 gzip 压缩功能，通常可以高达70%，也就是说，如果你的网页有30K，压缩之后就变成9K，
对于大部分网站，显然可以明显提高浏览速度（注：需要浏览器支持）。&lt;/p&gt;

&lt;p&gt;测试工具：&lt;a href=&#34;http://developers.google.com/speed/pagespeed/insights/&#34;&gt;google speed&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;nodejs-express:5b073e0f77dbfbc20f7932700a9b9d58&#34;&gt;nodejs + express&lt;/h4&gt;

&lt;p&gt;对于 nodejs + express 框架，启用方法非常简单，启用 compress() 中间件即可，
通过 gzip / deflate 压缩响应数据，这个中间件应该放置在所有的中间件最前面以保证所有的返回都是被压缩的。&lt;/p&gt;

&lt;p&gt;代码如下：&lt;/p&gt;
app.use(express.logger());
app.use(express.compress());
app.use(express.static(__dirname + &#39;/html&#39;));
app.use(express.methodOverride());
app.use(express.bodyParser());

&lt;h4 id=&#34;nginx:5b073e0f77dbfbc20f7932700a9b9d58&#34;&gt;nginx&lt;/h4&gt;

&lt;p&gt;编辑 nginx 的配置文件&lt;/p&gt;
sudo vi /etc/nginx/nginx.conf

&lt;p&gt;在 Gzip Settings 中加入如下设置：&lt;/p&gt;
##
# Gzip Settings
##

gzip on;
gzip_min_length 1k;
gzip_buffers 4 16k;
gzip_comp_level 5;
gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php;

&lt;p&gt;1) gzip&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;语法：gzip on/off&lt;/li&gt;
&lt;li&gt;默认值：off&lt;/li&gt;
&lt;li&gt;作用域：http, server, location&lt;/li&gt;
&lt;li&gt;说明：开启或者关闭 gzip 模块，这里使用 on 表示启动&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2) gzip_min_length&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;语法：gzip_min_length length&lt;/li&gt;
&lt;li&gt;默认值：gzip_min_length 0&lt;/li&gt;
&lt;li&gt;作用域：http, server, location&lt;/li&gt;
&lt;li&gt;说明：设置允许压缩的页面最小字节数，页面字节数从header头中的Content-Length中进行获取。默认值是0，不管页面多大都压缩。建议设置成大于1k的字节数，小于1k可能会越压越大。|&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3) gzip_buffers&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;语法: gzip_buffers number size&lt;/li&gt;
&lt;li&gt;默认值: gzip_buffers 4 4k/8k&lt;/li&gt;
&lt;li&gt;作用域: http, server, location&lt;/li&gt;
&lt;li&gt;说明：设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。4 16k 代表以 16k 为单位，按照原始数据大小以 16k 为单位的4倍申请内存。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4) gzip_comp_level&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;语法: gzip_comp_level 1..9&lt;/li&gt;
&lt;li&gt;默认值: gzip_comp_level 1&lt;/li&gt;
&lt;li&gt;作用域: http, server, location&lt;/li&gt;
&lt;li&gt;说明：gzip压缩比，1 压缩比最小处理速度最快，9 压缩比最大但处理最慢（传输快但比较消耗cpu）。这里设置为 5。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;5) gzip_types&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;语法: gzip_types mime-type [mime-type &amp;hellip;]&lt;/li&gt;
&lt;li&gt;默认值: gzip_types text/html&lt;/li&gt;
&lt;li&gt;作用域: http, server, location&lt;/li&gt;
&lt;li&gt;说明：匹配MIME类型进行压缩，（无论是否指定）&amp;rdquo;text/html&amp;rdquo; 类型总是会被压缩的。这里设置为 text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
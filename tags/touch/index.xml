<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Touch on 文翼的博客</title>
    <link>http://blog.wenzhixin.net.cn/tags/touch/</link>
    <description>Recent content in Touch on 文翼的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>wenzhixin.net.cn 粤ICP备15117953号</copyright>
    <atom:link href="http://blog.wenzhixin.net.cn/tags/touch/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>手机 web 开发之 Touch 入门</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/hello_touch_event</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/hello_touch_event</guid>
      <description>

&lt;p&gt;微博应用上用手向左滑动，便可以触发返回事件，这一小小的功能虽说很简单，
但是却大大提高了用户体验（特别是用左手拿手机的人）。&lt;/p&gt;

&lt;p&gt;今天来研究在 web 上模拟这一简单的功能。&lt;/p&gt;

&lt;h4 id=&#34;1-touchevent:1e7125bb97247d5b94df90f5f4a67b3f&#34;&gt;1. TouchEvent&lt;/h4&gt;

&lt;p&gt;TouchEvent 是一类描述手指在触摸平面（触摸屏、触摸板等）的状态变化的事件。
这类事件用于描述一个或多个触点，使开发者可以检测触点的移动，触点的增加和减少，等等。&lt;/p&gt;

&lt;h4 id=&#34;2-触摸事件的属性与类型:1e7125bb97247d5b94df90f5f4a67b3f&#34;&gt;2. 触摸事件的属性与类型&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;TouchEvent.touches&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一 个 TouchList 对象，包含了所有当前接触触摸平面的触点的 Touch 对象，
无论它们的起始于哪个 element 上，也无论它们状态是否发生了变化。&lt;/p&gt;

&lt;p&gt;touches 有两个重要的属性分别是 pageX 和 pageY，表示触摸点相对于页面的位置。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;touchstart&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当用户在触摸平面上放置了一个触点时触发。事件的目标 element 将是触点位置上的那个目标 element&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;touchend&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当一个触点被用户从触摸平面上移除（当用户将一个手指离开触摸平面）时触发。
当触点移出触摸平面的边界时也将触发。例如用户将手指划出屏幕边缘。
事件的目标 element 和这个 touchend 事件对应的 touchstart 事件的目标 element 相同，
哪怕 touchend 事件触发时，触点已经移出了该 element 。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;touchmove&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当用户在触摸平面上移动触点时触发。
事件的目标 element 和这个 touchend 事件对应的 touchstart 事件的目标 element 相同，
哪怕当 touchend 事件触发时，触点已经移出了该 element 。&lt;/p&gt;

&lt;h4 id=&#34;3-简单模拟功能:1e7125bb97247d5b94df90f5f4a67b3f&#34;&gt;3. 简单模拟功能&lt;/h4&gt;
(function() {
    &#39;use strict&#39;;

    var startPos = {},
        endPos = {};

    window.addEventListener(&#39;touchstart&#39;, function(event) {
        event.preventDefault();

        var touch = event.touches[0];
        startPos.x = touch.pageX;
        startPos.y = touch.pageY;
    }, false);

    window.addEventListener(&#39;touchmove&#39;, function(event) {
        event.preventDefault();

        var touch = event.touches[0];
        endPos.x = touch.pageX;
        endPos.y = touch.pageY;
    }, false);

    window.addEventListener(&#39;touchend&#39;, function(event) {
        if (startPos.x &lt; endPos.x) {
            location.href = &#39;index.html&#39;;
        } else if (startPos.x &gt; endPos.x) {
            location.href = &#39;page.html&#39;;
        }
    }, false);

})();

&lt;p&gt;在 touchstart 事件中，我们将位置保存到 startPos&lt;br /&gt;
在 touchmove 事件中，我们将位置保存到 endPos&lt;br /&gt;
在 touchend 事件中，我们通过比较 startPos 和 endPos 的关系得到用户是向左滑动还是向右滑动。&lt;/p&gt;

&lt;p&gt;更多相关知识，请见&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Events/Touch_events&#34;&gt;Touch_events&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
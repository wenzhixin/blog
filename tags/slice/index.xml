<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slice on 文翼的博客</title>
    <link>http://blog.wenzhixin.net.cn/tags/slice/</link>
    <description>Recent content in Slice on 文翼的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>wenzhixin.net.cn 粤ICP备15117953号</copyright>
    <atom:link href="http://blog.wenzhixin.net.cn/tags/slice/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>理解 JavaScript 中的 Array.prototype.slice.apply(arguments)</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/slice_arguments</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/slice_arguments</guid>
      <description>&lt;p&gt;假如你是一个 JavaScript 开发者，你可能见到过 Array.prototype.slice.apply(arguments) 这样的用法，然后你会问，这么写是什么意思呢？&lt;/p&gt;

&lt;p&gt;这个语法其实不难理解，只是它有些不好看。Array 是 JavaScript 的基本类型，你可以使用 Array.prototype 获取它的属性值，在这里我假设你已经了解了 prototype 的概念。&lt;/p&gt;

&lt;p&gt;slice 是 JavaScript 的一个方法，用于选取一个数组的一部分数据，并返回一个新的数组。它可以接收两个参数，startIndex（必选）和 endIndex。因此：&lt;/p&gt;
var a = [&#34;a&#34;, &#34;b&#34;, &#34;c&#34;];
a.slice(1,2);

&lt;p&gt;将返回数组 [&amp;ldquo;b&amp;rdquo;]，它包含 a 数组从 1 到 2 之间元素。而：&lt;/p&gt;
var a = [&#34;a&#34;, &#34;b&#34;, &#34;c&#34;];
a.slice(1);

&lt;p&gt;则会返回数组 [“b”, “c”]，它包含 a 数组从 1 到最后一个元素之间元素。&lt;/p&gt;

&lt;p&gt;这里的 a 是个数组，那么变量 arguments 呢？&lt;/p&gt;

&lt;p&gt;众所周知，当你调用 JavaScript 的函数的时候，会创建一个隐藏的名为 arguments 的参数，你是不是觉得它就是一个数组呢？答案是否定的，它是一个对象，但是与数组类似。&lt;/p&gt;
function f () {
  return arguments;
}

f(&#34;1&#34;, &#34;2&#34;) instanceof Array;

&lt;p&gt;这里，你会得到 FALSE 的结果，就是说我们不能像平常一样使用 Array 的函数，例如：push，pop，slice等等这些。但是我想使用这些方法，应该怎么办呢？&lt;/p&gt;

&lt;p&gt;我们可以使用 Array.prototype.slice.apply(arguments) 对参数进行转换为真正的 Array。这里我们使用了 JavaScript 的 apply 方法，通过这个方法可以更好的了解 JavaScript 中调用函数的另一种方法。该方法将 slice 应用到第一个参数 arguments 中，并返回一个数组。&lt;/p&gt;
Array.prototype.slice.apply(f(&#34;1&#34;, &#34;2&#34;)) instanceof Array;

&lt;p&gt;现在可以看到这里返回 TRUE 的结果！！&lt;/p&gt;

&lt;p&gt;PS：在 ECMAScript5 中，我们只需要直接调用 arguments.slice() 即可。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debian on 文翼的博客</title>
    <link>http://blog.wenzhixin.net.cn/tags/debian/</link>
    <description>Recent content in Debian on 文翼的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>wenzhixin.net.cn 粤ICP备15117953号</copyright>
    <atom:link href="http://blog.wenzhixin.net.cn/tags/debian/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Debian 安装 nodejs 环境</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/debian_node_install</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/debian_node_install</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. 安装编译包&lt;/strong&gt;&lt;/p&gt;
sudo apt-get install python g++ make checkinstall

&lt;p&gt;&lt;strong&gt;2. 获取最新的 node 源码&lt;/strong&gt;&lt;/p&gt;
mkdir ~/src &amp;&amp; cd ~/src
wget -N http://nodejs.org/dist/node-latest.tar.gz
tar xzvf node-latest.tar.gz &amp;&amp; cd node-v*

&lt;p&gt;&lt;strong&gt;3. 配置编译源码&lt;/strong&gt;&lt;/p&gt;
./configure
sudo checkinstall

&lt;p&gt;注意，运行 checkinstall 需要 sudo，之后选择 3，将 node 的版本号前的 v 去掉，
例如，这里安装的版本为 v0.10.21，改为 0.10.21 即可。&lt;br /&gt;
这里编译会比较久，需要耐心等待，特别是在 pi 下。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 安装（-i）和卸载（-r）&lt;/strong&gt;&lt;/p&gt;
sudo dpkg -i node_*
sudo dpkg -r node

&lt;p&gt;&lt;strong&gt;5. 查看 nodejs 和 npm 的版本&lt;/strong&gt;&lt;/p&gt;
node -v
npm -v
</description>
    </item>
    
    <item>
      <title>Debian 添加自启动服务</title>
      <link>http://blog.wenzhixin.net.cn/1/01/01/debian_script_init</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog.wenzhixin.net.cn/1/01/01/debian_script_init</guid>
      <description>

&lt;h4 id=&#34;1-新建脚本文件:5a63f747350973a6bdfac6af85b4c2a9&#34;&gt;1. 新建脚本文件&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;在 /etc/init.d 下加入脚本文件&lt;/li&gt;
&lt;/ul&gt;
sudo vi /etc/init.d/aria2c

&lt;ul&gt;
&lt;li&gt;输入内容：&lt;/li&gt;
&lt;/ul&gt;
#!/bin/sh
### BEGIN INIT INFO
# Provides:          Aria2
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop::    $network $local_fs $remote_fs
# Should-Start:      $all
# Should-Stop:       $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Aria2 - Download Manager
# Description:       Aria2 - Download Manager
### END INIT INFO

NAME=aria2c
USER=pi
ARIA2C=/usr/bin/$NAME
PIDFILE=/var/run/$NAME.pid
CONF=/home/$USER/.aria2/aria2.conf
ARGS=&#34;--conf-path=${CONF}&#34;

test -f $ARIA2C || exit 0

. /lib/lsb/init-functions

case &#34;$1&#34; in
start)  log_daemon_msg &#34;Starting aria2c&#34; &#34;aria2c&#34;
        start-stop-daemon -S -q -b -m -p $PIDFILE -c $USER -a $ARIA2C -- $ARGS
        log_end_msg $?
        ;;
stop)   log_daemon_msg &#34;Stopping aria2c&#34; &#34;aria2c&#34;
        start-stop-daemon -K -q -p $PIDFILE
        log_end_msg $?
        ;;
restart|reload|force-reload)
        log_daemon_msg &#34;Restarting aria2c&#34; &#34;aria2c&#34;
        start-stop-daemon -K -R 5 -q -p $PIDFILE
        start-stop-daemon -S -q -b -m -p $PIDFILE -c $USER -a $ARIA2C -- $ARGS
        log_end_msg $?
        ;;
status)
        status_of_proc -p $PIDFILE $ARIA2C aria2c &amp;&amp; exit 0 || exit $?
        ;;
*)      log_action_msg &#34;Usage: /etc/init.d/aria2c {start|stop|restart|reload|force-reload|status}&#34;
        exit 2
        ;;
esac
exit 0

&lt;p&gt;以上脚本 &lt;code&gt;### BEGIN INIT INFO - ### END INIT INFO&lt;/code&gt; 为启动脚本需要定义的 metadata 信息，不定义会报错&lt;/p&gt;

&lt;p&gt;启用脚本使用 start-stop-daemon 命令，参数为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-S, &amp;ndash;start  启动服务&lt;/li&gt;
&lt;li&gt;-K, &amp;ndash;stop  停止服务&lt;/li&gt;
&lt;li&gt;-q, &amp;ndash;quiet  静默启动，不输出日志&lt;/li&gt;
&lt;li&gt;-b, &amp;ndash;background  后台启动&lt;/li&gt;
&lt;li&gt;-m, &amp;ndash;make-pidfile  创建 pid 文件&lt;/li&gt;
&lt;li&gt;-p, &amp;ndash;pidfile  指定 pid 文件&lt;/li&gt;
&lt;li&gt;-c, &amp;ndash;chuid  指定启动用户&lt;/li&gt;
&lt;li&gt;-a, &amp;ndash;startas pathname  进程路径&lt;/li&gt;
&lt;li&gt;-R, &amp;ndash;retry timeout|schedule  重试次数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要将 USER 修改为自己的用户名称&lt;br /&gt;
配置文件位于 /home/$USER/.aria2/aria2.conf&lt;/p&gt;

&lt;p&gt;更多参数含义可以通过 &lt;code&gt;man start-stop-daemon&lt;/code&gt; 进行查看&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修改脚本权限&lt;/li&gt;
&lt;/ul&gt;
sudo chmod +x /etc/init.d/aria2c

&lt;ul&gt;
&lt;li&gt;测试脚本&lt;/li&gt;
&lt;/ul&gt;
sudo /etc/init.d/aria2c start
sudo /etc/init.d/aria2c status
sudo /etc/init.d/aria2c stop
sudo /etc/init.d/aria2c status
sudo /etc/init.d/aria2c restart

&lt;h4 id=&#34;2-使用-insserv-设置自动启动:5a63f747350973a6bdfac6af85b4c2a9&#34;&gt;2. 使用 insserv 设置自动启动&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;添加服务&lt;/li&gt;
&lt;/ul&gt;
sudo insserv /etc/init.d/aria2c #添加服务
sudo insserv -r /etc/init.d/aria2c #删除服务

&lt;ul&gt;
&lt;li&gt;重启测试&lt;/li&gt;
&lt;/ul&gt;
sudo reboot
sudo /etc/init.d/aria2c status
</description>
    </item>
    
  </channel>
</rss>